[
  {
    "objectID": "gap-guava.html",
    "href": "gap-guava.html",
    "title": "Examples with guava GAP package",
    "section": "",
    "text": "We load guava with LoadPackage(\"guava\");.\ngap&gt; c1:=Codeword(\"000\");\n[ 0 0 0 ]\ngap&gt; c2:=Codeword(\"111\");\n[ 1 1 1 ]\ngap&gt; DistanceCodeword(c1,c2);\n3\ngap&gt; Weight(c1);\n0\ngap&gt; Weight(c2);\n3\nWith this two words we can define a code.\ngap&gt; C:=ElementsCode([c1,c2],GF(2));\na (3,2,1..3)1 user defined unrestricted code over GF(2)\ngap&gt; IsLinearCode(C);\ntrue\ngap&gt; MinimumDistance(C);\n3\nAnd so this can detect two errors, and can correct one error.\ngap&gt; Decode(C,Codeword(\"011\"));\n[ 1 ]\ngap&gt; Decode(C,Codeword(\"010\"));\n[ 0 ]\nThis code decodes by majority.\n\n\n\nRecall that a code is linear if it is a subspace of \\(\\mathbb{F}_q^n\\) for some finite field \\(\\mathbb{F}_q\\) and a positive integer \\(n\\). Our code \\(\\{000,111\\}\\) is linear, since it is a subspace of \\(\\mathbb{Z}_2^3\\).\ngap&gt; C:=ElementsCode([[0,0,0],[0,1,1],[1,0,1],[1,1,0]],GF(2));\na (3,4,1..3)1 user defined unrestricted code over GF(2)\ngap&gt; IsLinearCode(C);\ntrue\ngap&gt; G:=GeneratorMat(C);\n[ [ 0*Z(2), Z(2)^0, Z(2)^0 ], [ Z(2)^0, 0*Z(2), Z(2)^0 ] ]\ngap&gt; List(GeneratorMat(C),Codeword);\n[ [ 0 1 1 ], [ 1 0 1 ] ]\nEncoding is performed by multiplying on the left by the generating matrix.\ngap&gt; Codeword([0,1]*G);\n[ 1 0 1 ]\nIn this case \\((b_1\\ b_1)G=(b_1\\ b_2\\ b_1+b_2)\\). So the third bit is a parity check.\nA linear code can also be given in terms of its generating matrix or parity check matrix.\ngap&gt; m:=[[1,1,1,0,0,0,0],[1,0,0,1,1,0,0],[0,1,0,1,0,1,0],[1,1,0,1,0,0,1]];;\ngap&gt; C:=GeneratorMatCode(m,GF(2));\na linear [7,4,1..3]1 code defined by generator matrix over GF(2)\ngap&gt; Elements(C);\n[ [ 0 0 0 0 0 0 0 ], [ 0 0 0 1 1 1 1 ], [ 0 0 1 0 1 1 0 ], [ 0 0 1 1 0 0 1 ], [ 0 1 0 0 1 0 1 ], [ 0 1 0 1 0 1 0 ], [ 0 1 1 0 0 1 1 ], [ 0 1 1 1 1 0 0 ], [ 1 0 0 0 0 1 1 ], [ 1 0 0 1 1 0 0 ], [ 1 0 1 0 1 0 1 ], [ 1 0 1 1 0 1 0 ], [ 1 1 0 0 1 1 0 ], [ 1 1 0 1 0 0 1 ], [ 1 1 1 0 0 0 0 ], [ 1 1 1 1 1 1 1 ] ]\ngap&gt; Dimension(C);\n4\ngap&gt; H:=CheckMat(C);\n[ &lt;an immutable GF2 vector of length 7&gt;, &lt;an immutable GF2 vector of length 7&gt;, &lt;an immutable GF2 vector of length 7&gt; ]\ngap&gt; List(H, Codeword);\n[ [ 0 1 1 1 1 0 0 ], [ 1 0 1 1 0 1 0 ], [ 1 1 0 1 0 0 1 ] ]\ngap&gt; c:=Elements(C)[2];\n[ 0 0 0 1 1 1 1 ]\ngap&gt;H*c;\n[ 0 0 0 ]\nRecall that in a linear code\ngap&gt; MinimumDistance(C)&lt;=1+WordLength(C)-Dimension(C);\ntrue\nMembership can be detected with in.\ngap&gt; cc:=Codeword(\"10101000\");\n[ 1 0 1 0 1 0 0 0 ]\ngap&gt; cc in C;\nfalse\ngap&gt; H*cc;\n[ 0 0 1 ]\n\n\n\nA hamming code is a code of word length \\(2^{m-1}\\) whose parity matrix contains as rows all nonzero words of \\(m\\) bits. The dimension of this code is \\(2^{m-1}-m-1\\). These are denoted by \\(\\mathcal{H}_{2^m-1}\\), \\(m\\ge 3\\).\nIn guava a hamming code is defined by means of its redundancy. For instance, \\(\\mathcal{H}_7\\) has redundancy \\(3\\).\ngap&gt; C:=HammingCode(3);\na linear [7,4,3]1 Hamming (3,2) code over GF(2)\ngap&gt; G:=GeneratorMat(C);;\ngap&gt; List(G,Codeword);\n[ [ 1 1 1 0 0 0 0 ], [ 1 0 0 1 1 0 0 ], [ 0 1 0 1 0 1 0 ], [ 1 1 0 1 0 0 1 ] ]\ngap&gt; Dimension(C);\n4\ngap&gt; MinimumDistance(C);\n3\ngap&gt; WordLength(C);\n7\ngap&gt; Redundancy(C);\n3\ngap&gt; AsSortedList(C);\n[ [ 0 0 0 0 0 0 0 ], [ 0 0 0 1 1 1 1 ], [ 0 0 1 0 1 1 0 ], [ 0 0 1 1 0 0 1 ],\n  [ 0 1 0 0 1 0 1 ], [ 0 1 0 1 0 1 0 ], [ 0 1 1 0 0 1 1 ], [ 0 1 1 1 1 0 0 ],\n  [ 1 0 0 0 0 1 1 ], [ 1 0 0 1 1 0 0 ], [ 1 0 1 0 1 0 1 ], [ 1 0 1 1 0 1 0 ],\n  [ 1 1 0 0 1 1 0 ], [ 1 1 0 1 0 0 1 ], [ 1 1 1 0 0 0 0 ], [ 1 1 1 1 1 1 1 ] ]\n\n\n\nA linear code \\(C\\) is the kernel of its parity check matrix \\(H\\).\nAssume that \\(c\\) is a codeword and that an error \\(e\\) is produced. Then we receive \\(v=c+e\\), thus \\(e=v+c\\) (we are using binary codes). The vector \\(e\\) is called a pattern error. We can detect \\(2^n-2^k\\) pattern errors (with \\(n\\) the length of the words and \\(k\\) the dimension of \\(C\\)).\nObserve that \\(s=v^t H =e^t H\\) and does not depends on \\(c\\). This value is called a syndrome. There is only a syndrome for each class modulo \\(C\\). Indeed, there are as many syndromes as elements in \\(\\operatorname{im}(H)\\), and this is isomorphic to \\(\\ker(H)/C\\). So we are able to correct \\(2^{n-k}\\) pattern errors.\nThe syndrome table associates to each syndrome \\(s=v^tH\\) an element \\(e\\) modulo \\(C\\) (with minimal weight). Observe that \\(c=v+e\\), and so we can recover from \\(v\\) and \\(e\\) the codeword \\(c\\).\ngap&gt; C:=HammingCode(3);;\ngap&gt; v:=Codeword(\"0000111\");\n[ 0 0 0 0 1 1 1 ]\ngap&gt; m:=Decode(C,v);\n[ 0 1 1 1 ]\ngap&gt; m*G;\n[ 0 0 0 1 1 1 1 ]\nWe can do this with the syndrome table.\ngap&gt; Syndrome(C,v);\n[ 1 0 0 ]\ngap&gt; H:=CheckMat(C);;\ngap&gt; H*c;\n[ 1 0 0 ]\ngap&gt; st:=SyndromeTable(C);\n[ [ [ 0 0 0 0 0 0 0 ], [ 0 0 0 ] ], [ [ 1 0 0 0 0 0 0 ], [ 0 0 1 ] ],\n  [ [ 0 1 0 0 0 0 0 ], [ 0 1 0 ] ], [ [ 0 0 1 0 0 0 0 ], [ 0 1 1 ] ],\n  [ [ 0 0 0 1 0 0 0 ], [ 1 0 0 ] ], [ [ 0 0 0 0 1 0 0 ], [ 1 0 1 ] ],\n  [ [ 0 0 0 0 0 1 0 ], [ 1 1 0 ] ], [ [ 0 0 0 0 0 0 1 ], [ 1 1 1 ] ] ]\ngap&gt; First(st, x-&gt;x[2]=Syndrome(C,v))[1];\n[ 0 0 0 1 0 0 0 ]\ngap&gt; v+last;\n[ 0 0 0 1 1 1 1 ]\n\n\n\nLet \\(g(x)\\) be a squarefree polynomial over \\(\\mathbb{F}_{2^k}\\) for some positive integer \\(k\\). Let \\(L=\\{\\alpha_1,\\ldots,\\alpha_n\\}\\subset \\mathbb{F}_{2^k}\\) be such that no \\(\\alpha_i\\) is a zero of \\(g(x)\\). Set for \\(c\\in \\mathbb{Z}_2^n\\), set \\(R_c(x)=\\sum_{i=1}^n \\frac{c_i}{x-\\alpha_i} \\bmod{g(x)}\\). The Goppa code associated to \\(g(x)\\) and \\(c\\) is the set of \\(c\\in\\mathbb{Z}_2^n\\) such that \\(R_c(x)\\cong 0 \\bmod{g(x)}\\).\nThe minimum distance of this codes is \\(2\\deg(g(x))+1\\).\ngap&gt; x:=X(GF(8),\"x\");\nx\ngap&gt; g:=x^2+x+1;\nx^2+x+Z(2)^0\ngap&gt; L:=Elements(GF(8));\n[ 0*Z(2), Z(2)^0, Z(2^3), Z(2^3)^2, Z(2^3)^3, Z(2^3)^4, Z(2^3)^5, Z(2^3)^6 ]\ngap&gt; C:=GoppaCode(g,L);\na linear [8,2,5]3 classical Goppa code over GF(2)\ngap&gt; Elements(C);\n[ [ 0 0 0 0 0 0 0 0 ], [ 0 0 1 1 1 1 1 1 ], [ 1 1 0 0 1 0 1 1 ],\n  [ 1 1 1 1 0 1 0 0 ] ]\ngap&gt; G:=GeneratorMat(C);\n[ &lt;an immutable GF2 vector of length 8&gt;, &lt;an immutable GF2 vector of length\n    8&gt; ]\ngap&gt; List(G,Codeword);\n[ [ 1 1 1 1 0 1 0 0 ], [ 1 1 0 0 1 0 1 1 ] ]\nWe can compute \\(\\frac{1}{x-a}\\mod g(x)\\) with \\(a\\in L\\)\ngap&gt; inv:=List(L, a-&gt;GcdRepresentation(x-a,g)[1]);\n[ x+Z(2)^0, x, Z(2^3)^2*x+Z(2^3)^5, Z(2^3)^4*x+Z(2^3)^3, Z(2^3)^2*x+Z(2^3)^3,\n  Z(2^3)*x+Z(2^3)^6, Z(2^3)*x+Z(2^3)^5, Z(2^3)^4*x+Z(2^3)^6 ]\nYet another example\ngap&gt; x:=Indeterminate(GF(16),\"x\");\nx\ngap&gt; g:=x^2+x+Z(16)^3;      \nx^2+x+Z(2^4)^3\ngap&gt; L := List([2..13], i-&gt;Z(16)^i);\n[ Z(2^4)^2, Z(2^4)^3, Z(2^4)^4, Z(2^2), Z(2^4)^6, Z(2^4)^7, Z(2^4)^8,\n  Z(2^4)^9, Z(2^2)^2, Z(2^4)^11, Z(2^4)^12, Z(2^4)^13 ]\ngap&gt; C:=GoppaCode(g,L);\na linear [12,4,5]4..5 classical Goppa code over GF(2)\ngap&gt; H:=CheckMat(C);\n[ &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt;, &lt;an immutable GF2 vector of length 12&gt;,\n  &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt;, &lt;an immutable GF2 vector of length 12&gt;,\n  &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt; ]\ngap&gt; List(H,Codeword);\n[ [ 0 0 1 0 1 0 0 0 0 0 0 1 ], [ 0 1 0 1 1 0 0 0 1 0 0 1 ],\n  [ 0 0 0 0 1 1 0 1 0 1 1 1 ], [ 1 0 0 1 0 0 1 0 1 1 1 0 ],\n  [ 0 0 0 1 0 0 0 0 1 0 0 1 ], [ 0 0 0 0 0 1 0 1 1 0 0 0 ],\n  [ 0 0 0 0 0 0 0 1 1 0 1 0 ], [ 0 0 0 0 0 0 1 0 0 1 0 0 ] ]\ngap&gt; G:=GeneratorMat(C);\n[ &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt;, &lt;an immutable GF2 vector of length 12&gt;,\n  &lt;an immutable GF2 vector of length 12&gt; ]\ngap&gt; List(G,Codeword);\n[ [ 0 1 1 1 1 0 0 1 1 0 0 0 ], [ 0 1 1 0 1 0 1 0 0 1 0 0 ],\n  [ 1 1 1 0 1 1 0 1 0 0 1 0 ], [ 1 1 0 1 1 0 0 0 0 0 0 1 ] ]",
    "crumbs": [
      "Codes with GUAVA"
    ]
  },
  {
    "objectID": "gap-guava.html#defining-a-code",
    "href": "gap-guava.html#defining-a-code",
    "title": "Examples with guava GAP package",
    "section": "",
    "text": "We load guava with LoadPackage(\"guava\");.\ngap&gt; c1:=Codeword(\"000\");\n[ 0 0 0 ]\ngap&gt; c2:=Codeword(\"111\");\n[ 1 1 1 ]\ngap&gt; DistanceCodeword(c1,c2);\n3\ngap&gt; Weight(c1);\n0\ngap&gt; Weight(c2);\n3\nWith this two words we can define a code.\ngap&gt; C:=ElementsCode([c1,c2],GF(2));\na (3,2,1..3)1 user defined unrestricted code over GF(2)\ngap&gt; IsLinearCode(C);\ntrue\ngap&gt; MinimumDistance(C);\n3\nAnd so this can detect two errors, and can correct one error.\ngap&gt; Decode(C,Codeword(\"011\"));\n[ 1 ]\ngap&gt; Decode(C,Codeword(\"010\"));\n[ 0 ]\nThis code decodes by majority.",
    "crumbs": [
      "Codes with GUAVA"
    ]
  },
  {
    "objectID": "gap-guava.html#linear-codes",
    "href": "gap-guava.html#linear-codes",
    "title": "Examples with guava GAP package",
    "section": "",
    "text": "Recall that a code is linear if it is a subspace of \\(\\mathbb{F}_q^n\\) for some finite field \\(\\mathbb{F}_q\\) and a positive integer \\(n\\). Our code \\(\\{000,111\\}\\) is linear, since it is a subspace of \\(\\mathbb{Z}_2^3\\).\ngap&gt; C:=ElementsCode([[0,0,0],[0,1,1],[1,0,1],[1,1,0]],GF(2));\na (3,4,1..3)1 user defined unrestricted code over GF(2)\ngap&gt; IsLinearCode(C);\ntrue\ngap&gt; G:=GeneratorMat(C);\n[ [ 0*Z(2), Z(2)^0, Z(2)^0 ], [ Z(2)^0, 0*Z(2), Z(2)^0 ] ]\ngap&gt; List(GeneratorMat(C),Codeword);\n[ [ 0 1 1 ], [ 1 0 1 ] ]\nEncoding is performed by multiplying on the left by the generating matrix.\ngap&gt; Codeword([0,1]*G);\n[ 1 0 1 ]\nIn this case \\((b_1\\ b_1)G=(b_1\\ b_2\\ b_1+b_2)\\). So the third bit is a parity check.\nA linear code can also be given in terms of its generating matrix or parity check matrix.\ngap&gt; m:=[[1,1,1,0,0,0,0],[1,0,0,1,1,0,0],[0,1,0,1,0,1,0],[1,1,0,1,0,0,1]];;\ngap&gt; C:=GeneratorMatCode(m,GF(2));\na linear [7,4,1..3]1 code defined by generator matrix over GF(2)\ngap&gt; Elements(C);\n[ [ 0 0 0 0 0 0 0 ], [ 0 0 0 1 1 1 1 ], [ 0 0 1 0 1 1 0 ], [ 0 0 1 1 0 0 1 ], [ 0 1 0 0 1 0 1 ], [ 0 1 0 1 0 1 0 ], [ 0 1 1 0 0 1 1 ], [ 0 1 1 1 1 0 0 ], [ 1 0 0 0 0 1 1 ], [ 1 0 0 1 1 0 0 ], [ 1 0 1 0 1 0 1 ], [ 1 0 1 1 0 1 0 ], [ 1 1 0 0 1 1 0 ], [ 1 1 0 1 0 0 1 ], [ 1 1 1 0 0 0 0 ], [ 1 1 1 1 1 1 1 ] ]\ngap&gt; Dimension(C);\n4\ngap&gt; H:=CheckMat(C);\n[ &lt;an immutable GF2 vector of length 7&gt;, &lt;an immutable GF2 vector of length 7&gt;, &lt;an immutable GF2 vector of length 7&gt; ]\ngap&gt; List(H, Codeword);\n[ [ 0 1 1 1 1 0 0 ], [ 1 0 1 1 0 1 0 ], [ 1 1 0 1 0 0 1 ] ]\ngap&gt; c:=Elements(C)[2];\n[ 0 0 0 1 1 1 1 ]\ngap&gt;H*c;\n[ 0 0 0 ]\nRecall that in a linear code\ngap&gt; MinimumDistance(C)&lt;=1+WordLength(C)-Dimension(C);\ntrue\nMembership can be detected with in.\ngap&gt; cc:=Codeword(\"10101000\");\n[ 1 0 1 0 1 0 0 0 ]\ngap&gt; cc in C;\nfalse\ngap&gt; H*cc;\n[ 0 0 1 ]",
    "crumbs": [
      "Codes with GUAVA"
    ]
  },
  {
    "objectID": "gap-guava.html#hamming-codes",
    "href": "gap-guava.html#hamming-codes",
    "title": "Examples with guava GAP package",
    "section": "",
    "text": "A hamming code is a code of word length \\(2^{m-1}\\) whose parity matrix contains as rows all nonzero words of \\(m\\) bits. The dimension of this code is \\(2^{m-1}-m-1\\). These are denoted by \\(\\mathcal{H}_{2^m-1}\\), \\(m\\ge 3\\).\nIn guava a hamming code is defined by means of its redundancy. For instance, \\(\\mathcal{H}_7\\) has redundancy \\(3\\).\ngap&gt; C:=HammingCode(3);\na linear [7,4,3]1 Hamming (3,2) code over GF(2)\ngap&gt; G:=GeneratorMat(C);;\ngap&gt; List(G,Codeword);\n[ [ 1 1 1 0 0 0 0 ], [ 1 0 0 1 1 0 0 ], [ 0 1 0 1 0 1 0 ], [ 1 1 0 1 0 0 1 ] ]\ngap&gt; Dimension(C);\n4\ngap&gt; MinimumDistance(C);\n3\ngap&gt; WordLength(C);\n7\ngap&gt; Redundancy(C);\n3\ngap&gt; AsSortedList(C);\n[ [ 0 0 0 0 0 0 0 ], [ 0 0 0 1 1 1 1 ], [ 0 0 1 0 1 1 0 ], [ 0 0 1 1 0 0 1 ],\n  [ 0 1 0 0 1 0 1 ], [ 0 1 0 1 0 1 0 ], [ 0 1 1 0 0 1 1 ], [ 0 1 1 1 1 0 0 ],\n  [ 1 0 0 0 0 1 1 ], [ 1 0 0 1 1 0 0 ], [ 1 0 1 0 1 0 1 ], [ 1 0 1 1 0 1 0 ],\n  [ 1 1 0 0 1 1 0 ], [ 1 1 0 1 0 0 1 ], [ 1 1 1 0 0 0 0 ], [ 1 1 1 1 1 1 1 ] ]",
    "crumbs": [
      "Codes with GUAVA"
    ]
  },
  {
    "objectID": "gap-guava.html#decoding-with-syndromes",
    "href": "gap-guava.html#decoding-with-syndromes",
    "title": "Examples with guava GAP package",
    "section": "",
    "text": "A linear code \\(C\\) is the kernel of its parity check matrix \\(H\\).\nAssume that \\(c\\) is a codeword and that an error \\(e\\) is produced. Then we receive \\(v=c+e\\), thus \\(e=v+c\\) (we are using binary codes). The vector \\(e\\) is called a pattern error. We can detect \\(2^n-2^k\\) pattern errors (with \\(n\\) the length of the words and \\(k\\) the dimension of \\(C\\)).\nObserve that \\(s=v^t H =e^t H\\) and does not depends on \\(c\\). This value is called a syndrome. There is only a syndrome for each class modulo \\(C\\). Indeed, there are as many syndromes as elements in \\(\\operatorname{im}(H)\\), and this is isomorphic to \\(\\ker(H)/C\\). So we are able to correct \\(2^{n-k}\\) pattern errors.\nThe syndrome table associates to each syndrome \\(s=v^tH\\) an element \\(e\\) modulo \\(C\\) (with minimal weight). Observe that \\(c=v+e\\), and so we can recover from \\(v\\) and \\(e\\) the codeword \\(c\\).\ngap&gt; C:=HammingCode(3);;\ngap&gt; v:=Codeword(\"0000111\");\n[ 0 0 0 0 1 1 1 ]\ngap&gt; m:=Decode(C,v);\n[ 0 1 1 1 ]\ngap&gt; m*G;\n[ 0 0 0 1 1 1 1 ]\nWe can do this with the syndrome table.\ngap&gt; Syndrome(C,v);\n[ 1 0 0 ]\ngap&gt; H:=CheckMat(C);;\ngap&gt; H*c;\n[ 1 0 0 ]\ngap&gt; st:=SyndromeTable(C);\n[ [ [ 0 0 0 0 0 0 0 ], [ 0 0 0 ] ], [ [ 1 0 0 0 0 0 0 ], [ 0 0 1 ] ],\n  [ [ 0 1 0 0 0 0 0 ], [ 0 1 0 ] ], [ [ 0 0 1 0 0 0 0 ], [ 0 1 1 ] ],\n  [ [ 0 0 0 1 0 0 0 ], [ 1 0 0 ] ], [ [ 0 0 0 0 1 0 0 ], [ 1 0 1 ] ],\n  [ [ 0 0 0 0 0 1 0 ], [ 1 1 0 ] ], [ [ 0 0 0 0 0 0 1 ], [ 1 1 1 ] ] ]\ngap&gt; First(st, x-&gt;x[2]=Syndrome(C,v))[1];\n[ 0 0 0 1 0 0 0 ]\ngap&gt; v+last;\n[ 0 0 0 1 1 1 1 ]",
    "crumbs": [
      "Codes with GUAVA"
    ]
  },
  {
    "objectID": "gap-guava.html#binary-goppa-codes",
    "href": "gap-guava.html#binary-goppa-codes",
    "title": "Examples with guava GAP package",
    "section": "",
    "text": "Let \\(g(x)\\) be a squarefree polynomial over \\(\\mathbb{F}_{2^k}\\) for some positive integer \\(k\\). Let \\(L=\\{\\alpha_1,\\ldots,\\alpha_n\\}\\subset \\mathbb{F}_{2^k}\\) be such that no \\(\\alpha_i\\) is a zero of \\(g(x)\\). Set for \\(c\\in \\mathbb{Z}_2^n\\), set \\(R_c(x)=\\sum_{i=1}^n \\frac{c_i}{x-\\alpha_i} \\bmod{g(x)}\\). The Goppa code associated to \\(g(x)\\) and \\(c\\) is the set of \\(c\\in\\mathbb{Z}_2^n\\) such that \\(R_c(x)\\cong 0 \\bmod{g(x)}\\).\nThe minimum distance of this codes is \\(2\\deg(g(x))+1\\).\ngap&gt; x:=X(GF(8),\"x\");\nx\ngap&gt; g:=x^2+x+1;\nx^2+x+Z(2)^0\ngap&gt; L:=Elements(GF(8));\n[ 0*Z(2), Z(2)^0, Z(2^3), Z(2^3)^2, Z(2^3)^3, Z(2^3)^4, Z(2^3)^5, Z(2^3)^6 ]\ngap&gt; C:=GoppaCode(g,L);\na linear [8,2,5]3 classical Goppa code over GF(2)\ngap&gt; Elements(C);\n[ [ 0 0 0 0 0 0 0 0 ], [ 0 0 1 1 1 1 1 1 ], [ 1 1 0 0 1 0 1 1 ],\n  [ 1 1 1 1 0 1 0 0 ] ]\ngap&gt; G:=GeneratorMat(C);\n[ &lt;an immutable GF2 vector of length 8&gt;, &lt;an immutable GF2 vector of length\n    8&gt; ]\ngap&gt; List(G,Codeword);\n[ [ 1 1 1 1 0 1 0 0 ], [ 1 1 0 0 1 0 1 1 ] ]\nWe can compute \\(\\frac{1}{x-a}\\mod g(x)\\) with \\(a\\in L\\)\ngap&gt; inv:=List(L, a-&gt;GcdRepresentation(x-a,g)[1]);\n[ x+Z(2)^0, x, Z(2^3)^2*x+Z(2^3)^5, Z(2^3)^4*x+Z(2^3)^3, Z(2^3)^2*x+Z(2^3)^3,\n  Z(2^3)*x+Z(2^3)^6, Z(2^3)*x+Z(2^3)^5, Z(2^3)^4*x+Z(2^3)^6 ]\nYet another example\ngap&gt; x:=Indeterminate(GF(16),\"x\");\nx\ngap&gt; g:=x^2+x+Z(16)^3;      \nx^2+x+Z(2^4)^3\ngap&gt; L := List([2..13], i-&gt;Z(16)^i);\n[ Z(2^4)^2, Z(2^4)^3, Z(2^4)^4, Z(2^2), Z(2^4)^6, Z(2^4)^7, Z(2^4)^8,\n  Z(2^4)^9, Z(2^2)^2, Z(2^4)^11, Z(2^4)^12, Z(2^4)^13 ]\ngap&gt; C:=GoppaCode(g,L);\na linear [12,4,5]4..5 classical Goppa code over GF(2)\ngap&gt; H:=CheckMat(C);\n[ &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt;, &lt;an immutable GF2 vector of length 12&gt;,\n  &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt;, &lt;an immutable GF2 vector of length 12&gt;,\n  &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt; ]\ngap&gt; List(H,Codeword);\n[ [ 0 0 1 0 1 0 0 0 0 0 0 1 ], [ 0 1 0 1 1 0 0 0 1 0 0 1 ],\n  [ 0 0 0 0 1 1 0 1 0 1 1 1 ], [ 1 0 0 1 0 0 1 0 1 1 1 0 ],\n  [ 0 0 0 1 0 0 0 0 1 0 0 1 ], [ 0 0 0 0 0 1 0 1 1 0 0 0 ],\n  [ 0 0 0 0 0 0 0 1 1 0 1 0 ], [ 0 0 0 0 0 0 1 0 0 1 0 0 ] ]\ngap&gt; G:=GeneratorMat(C);\n[ &lt;an immutable GF2 vector of length 12&gt;, &lt;an immutable GF2 vector of length\n    12&gt;, &lt;an immutable GF2 vector of length 12&gt;,\n  &lt;an immutable GF2 vector of length 12&gt; ]\ngap&gt; List(G,Codeword);\n[ [ 0 1 1 1 1 0 0 1 1 0 0 0 ], [ 0 1 1 0 1 0 1 0 0 1 0 0 ],\n  [ 1 1 1 0 1 1 0 1 0 0 1 0 ], [ 1 1 0 1 1 0 0 0 0 0 0 1 ] ]",
    "crumbs": [
      "Codes with GUAVA"
    ]
  },
  {
    "objectID": "gap-numricalsgps.html",
    "href": "gap-numricalsgps.html",
    "title": "NumericalSgps",
    "section": "",
    "text": "In order to work with numerical semigroups, we have to load the package numericalsgps. For this tutorial we have used the development version available in github.\ngap&gt; LoadPackage(\"num\");  \nWe start by defining a numerical semigroup. There are many ways to do this depending on the information we have about it. If we know a system of generators, then we can do the following. We will store the semigroup in a variable called s.\ngap&gt; s:=NumericalSemigroup(3,5,7);\n&lt;Numerical semigroup with 3 generators&gt;\nIndeed, \\(\\{3,5,7\\}\\) is a minimal generating set for s.\ngap&gt; MinimalGenerators(s);\n[ 3, 5, 7 ]\nMembership can be detected with in:\ngap&gt; 1 in s;\nfalse\ngap&gt; 100 in s;\ntrue\nThe set of sporadic elements (elements up to the conductor, or small elements) of the semigroup are\ngap&gt; SmallElements(s);\n[ 0, 3, 5 ]\ngap&gt; Conductor(s);\n5\ngap&gt; FrobeniusNumber(s);\n4\nThis also is showing us the sets of gaps of s\ngap&gt; Gaps(s);\n[ 1, 2, 4 ]\ngap&gt; Genus(s);\n3\nRecall that from the Apéry sets, one can retreive all this information.\ngap&gt; AperyList(s);\n[ 0, 7, 5 ]\nIf only the semigroup is given as argument, then the Apéry set is computed with respect to the multiplicity. Note that the output is a list, in the \\(i\\)th position we find the smallest element in s congruent with \\(i\\) modulo the multiplicity (or the given element we specify as second argument).\ngap&gt; AperyList(s,10);\n[ 0, 11, 12, 3, 14, 5, 6, 7, 8, 9 ]\nIt is well know that if the second argument is in the semigroup, then the output will have length precisely this argument. It not, the we get some extra elements.\ngap&gt; AperyList(s,6);\n[ 0, 7, 8, 3, 10, 5 ]\nThe set of pseudo-Frobenius numbers can be computed as follows.\ngap&gt; PseudoFrobeniusOfNumericalSemigroup(s);\n[ 2, 4 ]\ngap&gt; Type(s);\n2\nLet us for instance check that Wilf’s conjecture holds for all numerical semigroups with conductor equal to 20 (and thus Frobenius number 19).\ngap&gt; l:=NumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; Length(l);\n961\ngap&gt; ForAll(l, s-&gt;20&lt;=EmbeddingDimension(s)*(Length(SmallElements(s))-1));\ntrue\nWe are substracting one to the number of small elements since we consider the conductor as small element.\nThe special gaps (those that can be use to extend the semigroup to another numerical semigroup) are\ngap&gt; SpecialGaps(s);\n[ 4 ]\ngap&gt; t:=AddSpecialGapOfNumericalSemigroup(4,s);\n&lt;Numerical semigroup&gt;\ngap&gt; SmallElements(t);\n[ 0, 3 ]\nAnd the set of all oversemigroups:\ngap&gt; OverSemigroupsNumericalSemigroup(s);\n[ &lt;The numerical semigroup N&gt;, &lt;Numerical semigroup with 2 generators&gt;,\n  &lt;Numerical semigroup with 3 generators&gt;,\n  &lt;Numerical semigroup with 3 generators&gt; ]\ngap&gt; List(last,MinimalGenerators);\n[ [ 1 ], [ 2, 3 ], [ 3 .. 5 ], [ 3, 5, 7 ] ]\nThe set of fundamental gaps, is computed as follows. We can use fundamental gaps to define semigroups.\ngap&gt; FundamentalGaps(s);\n[ 4 ]\ngap&gt; NumericalSemigroupByFundamentalGaps([4])=s;\ntrue\nAs we can do with small elements and gaps.\ngap&gt; NumericalSemigroupByGaps(Gaps(s))=s;\ntrue\ngap&gt; NumericalSemigroupBySmallElements(SmallElements(s))=s;\ntrue\n\n\n\nOur semigroup example s is not symmetric, but it is pseudo-symmetric.\ngap&gt; IsIrreducible(s);\ntrue\ngap&gt; IsSymmetric(s);\nfalse\nSymmetric numerical semigroups have type one, whole pseudo-symmetric have type equal to two.\ngap&gt; l:=IrreducibleNumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; List(l,MinimalGenerators);\n[ [ 2, 21 ], [ 3, 11 ], [ 4, 6, 17 ], [ 4, 9, 14 ], [ 4, 10, 13 ], [ 5, 6 ],\n  [ 5, 8, 12 ], [ 5, 11, 12, 13 ], [ 6, 8, 9 ], [ 6, 8, 10, 15, 17 ],\n  [ 6, 9, 11, 14, 16 ], [ 6, 10, 11, 14, 15 ], [ 7, 8, 9, 13 ],\n  [ 7, 8, 10, 13 ], [ 7, 9, 11, 13, 15, 17 ], [ 7, 10, 11, 13, 15, 16 ],\n  [ 8, 9, 12, 13, 14, 15 ], [ 8, 10, 12, 13, 14, 15, 17 ],\n  [ 9, 11, 12, 13, 14, 15, 16, 17 ], [ 10, 11, 12, 13, 14, 15, 16, 17, 18 ] ]\nEvery numerical semigroup can be expressed (though not uniquely) as the intersection of irreducible numerical semigroups.\ngap&gt; t:=NumericalSemigroup(10,11,12,13);\n&lt;Numerical semigroup with 4 generators&gt;\ngap&gt; DecomposeIntoIrreducibles(t);\n[ &lt;Numerical semigroup with 5 generators&gt;,\n  &lt;Numerical semigroup with 6 generators&gt;,\n  &lt;Numerical semigroup with 6 generators&gt; ]\ngap&gt; List(last,MinimalGenerators);\n[ [ 10, 11, 12, 13, 15 ], [ 10, 11, 12, 13, 18, 19 ],\n  [ 10, 11, 12, 13, 19, 27 ] ]\nWe can actually find all oversemigroups of t that are irreducible.\ngap&gt; o:=OverSemigroupsNumericalSemigroup(t);;\ngap&gt; oi:=Filtered(o,IsIrreducible);;\ngap&gt; Length(oi);\n35\ngap&gt; t=Intersection(oi);\ntrue\nThere are some special families of symmetric numerical semigroups, as complete intersections, free, telescopic, …\ngap&gt; s:=NumericalSemigroup(4,6,9);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; IsFree(s);\ntrue\ngap&gt; lf:=FreeNumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; List(lf,MinimalGenerators);\n[ [ 2, 21 ], [ 3, 11 ], [ 4, 6, 17 ], [ 4, 9, 14 ], [ 4, 10, 13 ], [ 5, 6 ],\n  [ 5, 8, 12 ], [ 6, 8, 9 ] ]\n\n\n\nWe can construct almost symmetric numerical semigruops from irreducible numerical semigroups by removing some of its elements.\ngap&gt; AlmostSymmetricNumericalSemigroupsFromIrreducible(s);\n[ &lt;Numerical semigroup&gt;, &lt;Numerical semigroup with 4 generators&gt;,\n  &lt;Numerical semigroup with 4 generators&gt; ]\ngap&gt; List(last,MinimalGenerators);\n[ [ 4, 6, 9 ], [ 4, 6, 13, 15 ], [ 4, 9, 10, 15 ] ]\nActually, one can compute with this idea the set of all almost symmetric numerical semigroups with given Frobenius number.\ngap&gt; la:=AlmostSymmetricNumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; Length(la);\n131\ngap&gt; t:=First(la,s-&gt;not(IsIrreducible(s)));\n&lt;Numerical semigroup&gt;\ngap&gt; MinimalGenerators(t);\n[ 4, 6, 21, 23 ]\ngap&gt; Genus(t)=(FrobeniusNumber(t)+Type(t))/2;\ntrue\n\n\n\nAn ideal of a numerical semigroup can be defined by means of a generating system.\ngap&gt; s:=NumericalSemigroup(6,9,20);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; i:=[2,3]+s;\ngap&gt; MinimalGenerators(i);\n[ 2, 3 ]\nThe above ideal is not included in its ambient semigroup, and so it is not integral.\ngap&gt; IsIntegral(i);\nfalse\ngap&gt; AmbientNumericalSemigroupOfIdeal(i);\n&lt;Numerical semigroup with 3 generators&gt;\nWe can check membership with in.\ngap&gt; 8 in s;\nfalse\ngap&gt; 8 in i;\ntrue\nIdeals also have conductors, since they are unions of translations of numerical semigroups.\ngap&gt; Conductor(i);\n26\ngap&gt; SmallElements(i);\n[ 2, 3, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\nThe basic operations include intersection, sum, addition, translations and difference.\ngap&gt; j:=10+s;\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; i+j;\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; MinimalGenerators(i+j);\n[ 12, 13 ]\ngap&gt; MinimalGenerators(10+i);\n[ 12, 13 ]\ngap&gt; Difference(i,j);\n[ 2, 3, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, 29, 32, 33, 35,\n  38, 41, 44, 47, 53 ]\ngap&gt; MinimalGenerators(Intersection(i,j));\n[ 22, 30 ]\nThe colon operation of ideals of rings translates in ideals of numerical semigroups to \\(I-J=\\{z\\in \\mathbb{Z} \\mid z+J\\subseteq I\\}\\).\ngap&gt; MinimalGenerators(i-j);\n[ -8, -7 ]\nThere are a couple of special ideals, one is the maximal ideal and the other the canonical (unique up to translations).\ngap&gt; m:=MaximalIdealOfNumericalSemigroup(s);\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; c:=CanonicalIdealOfNumericalSemigroup(s);\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; c-(c-i)=i;\ntrue\ngap&gt; MinimalGenerators(m);\n[ 6, 9, 20 ]\ngap&gt; MinimalGenerators(c);\n[ 0 ]\ngap&gt; IsCanonicalIdeal(10+c);\ntrue\nThe blow up of an ideal \\(I\\) of a numerical semigroup \\(S\\) is defined as \\(\\bigcup_{n\\in \\mathbb{N}}(nI-nI)\\).\ngap&gt; MinimalGenerators(BlowUpIdealOfNumericalSemigroup(i));\n[ 0, 1, 2, 3, 4, 5 ]\ngap&gt; List([1..10], n-&gt;HilbertFunctionOfIdealOfNumericalSemigroup(n,i));\n[ 4, 4, 3, 2, 2, 2, 2, 2, 2, 2 ]\nIf the ideal is the maximal ideal, then it coincides with the Lipman semigroup of \\(S\\).\ngap&gt; MinimalGenerators(BlowUpOfNumericalSemigroup(s));\n[ 3, 14 ]\ngap&gt; LipmanSemigroup(s);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; MinimalGenerators(last);\n[ 3, 14 ]\nOne can keep computing Lipman semigroups until we reach \\(\\mathbb{N}\\), and the multiplicities of these semigroups conform the multiplicity sequence of \\(S\\)\ngap&gt; MultiplicitySequenceOfNumericalSemigroup(s);\n[ 6, 3, 3, 3, 3, 2, 1 ]\n\n\n\nThe set of factorizations of an element in a numerical semigroup can be obtained as follows.\ngap&gt; s:=NumericalSemigroup(6,9,20);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; FactorizationsElementWRTNumericalSemigroup(36,s);\n[ [ 6, 0, 0 ], [ 3, 2, 0 ], [ 0, 4, 0 ] ]\nAnd the set of \\(\\mathcal{R}\\)-classes as\ngap&gt; RClassesOfSetOfFactorizations(last);\n[ [ [ 0, 4, 0 ], [ 3, 2, 0 ], [ 6, 0, 0 ] ] ]\nThe set of Betti elements is\ngap&gt; BettiElementsOfNumericalSemigroup(s);\n[ 18, 60 ]\nAnd a minimal presentation is obtained with\ngap&gt; MinimalPresentationOfNumericalSemigroup(s);\n[ [ [ 1, 6, 0 ], [ 0, 0, 3 ] ], [ [ 3, 0, 0 ], [ 0, 2, 0 ] ] ]\nRecall that we can produce this also by using elimination.\ngap&gt; x:=Indeterminate(Rationals,\"x\");;  \ngap&gt; y:=Indeterminate(Rationals,\"y\");;\ngap&gt; z:=Indeterminate(Rationals,\"z\");;\ngap&gt; t:=Indeterminate(Rationals,\"t\");;\ngap&gt; R:=PolynomialRing(Rationals,[x,y,z,t]);\nRationals[x,y,z,t]\ngap&gt; i:=Ideal(R,[x-t^6,y-t^9,z-t^20]);\n&lt;two-sided ideal in Rationals[x,y,z,t], (3 generators)&gt;\ngap&gt; GroebnerBasis(i,EliminationOrdering([t]));\n[ x^3-y^2, x*y^6-z^3, y^8-x^2*z^3, -x^2*y+z*t, y^5*t-x*z^2, x^2*y^3*t-z^2,\n  y^2*t^2-z, y*t^3-x^2, x*t^3-y, t^6-x ]\nThe graph \\(G_n\\) can be calculated in the following way.\ngap&gt; GraphAssociatedToElementInNumericalSemigroup(60,s);\n[ [ 6, 9, 20 ], [ [ 6, 9 ] ] ]\nIn this example, it has three vertices and a single edge.\nWe can also calculate the shaded set of an element.\ngap&gt; ShadedSetOfElementInNumericalSemigroup(60,s);\n[ [  ], [ 6 ], [ 6, 9 ], [ 9 ], [ 20 ] ]\nThe Hilbert series (or generating function of \\(S\\)) is computed via the polynomial associated to \\(S\\).\ngap&gt; HilbertSeriesOfNumericalSemigroup(s,x);\n(x^44-x^43+x^38-x^37+x^35-x^34+x^32-x^31+x^29-x^28+x^26-x^25+x^24-x^22+x^20-x^19+x^18-x^16+x^15-x^13+x^12-x^10+x^9-x^7+x^6-x+1)/(-x+1)\ngap&gt; NumericalSemigroupPolynomial(s,x);\nx^44-x^43+x^38-x^37+x^35-x^34+x^32-x^31+x^29-x^28+x^26-x^25+x^24-x^22+x^20-x^19+x^18-x^16+x^15-x^13+x^12-x^10+x^9-x^7+x^6-x+1\nActually, this polynomial has all its roots in the unit circle.\ngap&gt; IsKroneckerPolynomial(last);\ntrue\n## Nonunique factorization invariants\nWe already know how to compute the set of factorizations of an element in the semigroup. The set of lengths is calculated as follows.\n\n\ngap&gt; LengthsOfFactorizationsElementWRTNumericalSemigroup(100,s);\n[ 5, 9, 10, 11, 12 ]\n### Elasticity\nThe elasticity of an element and of the whole numerical semigroup can be computed with the following functions.\ngap&gt; ElasticityOfFactorizationsElementWRTNumericalSemigroup(100,s);\n12/5\ngap&gt; ElasticityOfNumericalSemigroup(s);\n10/3\n### Delta sets\nThe set of distances or Delta set:\ngap&gt; DeltaSetOfFactorizationsElementWRTNumericalSemigroup(100,s);\n[ 1, 4 ]\nOr even of the whole semigroups\ngap&gt; DeltaSetOfNumericalSemigroup(s);\n[ 1 .. 4 ]\nRecall that the maximum is reached in the Betti elements of the semigroup.\ngap&gt; List(B,b-&gt;DeltaSetOfFactorizationsElementWRTNumericalSemigroup(b,s));\n[ [ 1 ], [ 1, 4 ] ]\n\n\n\nThe catenary degree of a numerical semigroup is achieved in one of its Betti elements.\ngap&gt; List(B, b-&gt;CatenaryDegreeOfElementInNumericalSemigroup(b,s));\n[ 3, 7 ]\ngap&gt; CatenaryDegreeOfNumericalSemigroup(s);\n7\n\n\n\nThe omega primality of an element or of the semigroup (maximum of its atoms) can be computed as follows.\ngap&gt; OmegaPrimalityOfElementInNumericalSemigroup(100,s);\n20\ngap&gt; OmegaPrimalityOfNumericalSemigroup(s);\n10\nBecause for the atoms we obtain\ngap&gt; A:=MinimalGenerators(s);\n[ 6, 9, 20 ]\ngap&gt; List(A, a-&gt;OmegaPrimalityOfElementInNumericalSemigroup(a,s));\n[ 3, 3, 10 ]\n\n\n\nWe have specific funtions to compute the tame degree of an element in a numerical semigroup and the tame degree of the whole semigroup.\ngap&gt; TameDegreeOfElementInNumericalSemigroup(100,s);\n7\ngap&gt; TameDegreeOfNumericalSemigroup(s);\n10\ngap&gt; l:=Intersection(s,[1..100]);\n[ 6, 9, 12, 15, 18, 20, 21, 24, 26, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40,\n  41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n  80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\n  99, 100 ]\ngap&gt; List(l,x-&gt;TameDegreeOfElementInNumericalSemigroup(x,s));\n[ 0, 0, 0, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 0, 0, 3, 3, 0, 0, 0, 3, 3, 3, 0, 3,\n  3, 0, 3, 0, 0, 0, 3, 0, 3, 0, 3, 0, 10, 0, 3, 3, 3, 3, 10, 3, 3, 10, 3, 0,\n  10, 0, 3, 10, 3, 0, 10, 0, 7, 10, 3, 3, 10, 3, 7, 10, 3, 7, 10, 0, 7, 10,\n  3, 0, 10, 0, 3, 10, 7 ]\n\n\n\n\nLooking for a four generated numerical semigroup with 7 relators.\ngap&gt; l:=List([1..20], _-&gt;RandomNumericalSemigroup(5,500));;\ngap&gt; ll:=Filtered(l, s-&gt;EmbeddingDimension(s)=4);;\ngap&gt; Filtered(ll, s-&gt;Length(MinimalPresentationOfNumericalSemigroup(s))=7);\ngap&gt; MinimalGenerators(last[1]);\n[ 315, 318, 485, 493 ]"
  },
  {
    "objectID": "gap-numricalsgps.html#notable-elements",
    "href": "gap-numricalsgps.html#notable-elements",
    "title": "NumericalSgps",
    "section": "",
    "text": "In order to work with numerical semigroups, we have to load the package numericalsgps. For this tutorial we have used the development version available in github.\ngap&gt; LoadPackage(\"num\");  \nWe start by defining a numerical semigroup. There are many ways to do this depending on the information we have about it. If we know a system of generators, then we can do the following. We will store the semigroup in a variable called s.\ngap&gt; s:=NumericalSemigroup(3,5,7);\n&lt;Numerical semigroup with 3 generators&gt;\nIndeed, \\(\\{3,5,7\\}\\) is a minimal generating set for s.\ngap&gt; MinimalGenerators(s);\n[ 3, 5, 7 ]\nMembership can be detected with in:\ngap&gt; 1 in s;\nfalse\ngap&gt; 100 in s;\ntrue\nThe set of sporadic elements (elements up to the conductor, or small elements) of the semigroup are\ngap&gt; SmallElements(s);\n[ 0, 3, 5 ]\ngap&gt; Conductor(s);\n5\ngap&gt; FrobeniusNumber(s);\n4\nThis also is showing us the sets of gaps of s\ngap&gt; Gaps(s);\n[ 1, 2, 4 ]\ngap&gt; Genus(s);\n3\nRecall that from the Apéry sets, one can retreive all this information.\ngap&gt; AperyList(s);\n[ 0, 7, 5 ]\nIf only the semigroup is given as argument, then the Apéry set is computed with respect to the multiplicity. Note that the output is a list, in the \\(i\\)th position we find the smallest element in s congruent with \\(i\\) modulo the multiplicity (or the given element we specify as second argument).\ngap&gt; AperyList(s,10);\n[ 0, 11, 12, 3, 14, 5, 6, 7, 8, 9 ]\nIt is well know that if the second argument is in the semigroup, then the output will have length precisely this argument. It not, the we get some extra elements.\ngap&gt; AperyList(s,6);\n[ 0, 7, 8, 3, 10, 5 ]\nThe set of pseudo-Frobenius numbers can be computed as follows.\ngap&gt; PseudoFrobeniusOfNumericalSemigroup(s);\n[ 2, 4 ]\ngap&gt; Type(s);\n2\nLet us for instance check that Wilf’s conjecture holds for all numerical semigroups with conductor equal to 20 (and thus Frobenius number 19).\ngap&gt; l:=NumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; Length(l);\n961\ngap&gt; ForAll(l, s-&gt;20&lt;=EmbeddingDimension(s)*(Length(SmallElements(s))-1));\ntrue\nWe are substracting one to the number of small elements since we consider the conductor as small element.\nThe special gaps (those that can be use to extend the semigroup to another numerical semigroup) are\ngap&gt; SpecialGaps(s);\n[ 4 ]\ngap&gt; t:=AddSpecialGapOfNumericalSemigroup(4,s);\n&lt;Numerical semigroup&gt;\ngap&gt; SmallElements(t);\n[ 0, 3 ]\nAnd the set of all oversemigroups:\ngap&gt; OverSemigroupsNumericalSemigroup(s);\n[ &lt;The numerical semigroup N&gt;, &lt;Numerical semigroup with 2 generators&gt;,\n  &lt;Numerical semigroup with 3 generators&gt;,\n  &lt;Numerical semigroup with 3 generators&gt; ]\ngap&gt; List(last,MinimalGenerators);\n[ [ 1 ], [ 2, 3 ], [ 3 .. 5 ], [ 3, 5, 7 ] ]\nThe set of fundamental gaps, is computed as follows. We can use fundamental gaps to define semigroups.\ngap&gt; FundamentalGaps(s);\n[ 4 ]\ngap&gt; NumericalSemigroupByFundamentalGaps([4])=s;\ntrue\nAs we can do with small elements and gaps.\ngap&gt; NumericalSemigroupByGaps(Gaps(s))=s;\ntrue\ngap&gt; NumericalSemigroupBySmallElements(SmallElements(s))=s;\ntrue"
  },
  {
    "objectID": "gap-numricalsgps.html#irreducible-numerical-semigroups",
    "href": "gap-numricalsgps.html#irreducible-numerical-semigroups",
    "title": "NumericalSgps",
    "section": "",
    "text": "Our semigroup example s is not symmetric, but it is pseudo-symmetric.\ngap&gt; IsIrreducible(s);\ntrue\ngap&gt; IsSymmetric(s);\nfalse\nSymmetric numerical semigroups have type one, whole pseudo-symmetric have type equal to two.\ngap&gt; l:=IrreducibleNumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; List(l,MinimalGenerators);\n[ [ 2, 21 ], [ 3, 11 ], [ 4, 6, 17 ], [ 4, 9, 14 ], [ 4, 10, 13 ], [ 5, 6 ],\n  [ 5, 8, 12 ], [ 5, 11, 12, 13 ], [ 6, 8, 9 ], [ 6, 8, 10, 15, 17 ],\n  [ 6, 9, 11, 14, 16 ], [ 6, 10, 11, 14, 15 ], [ 7, 8, 9, 13 ],\n  [ 7, 8, 10, 13 ], [ 7, 9, 11, 13, 15, 17 ], [ 7, 10, 11, 13, 15, 16 ],\n  [ 8, 9, 12, 13, 14, 15 ], [ 8, 10, 12, 13, 14, 15, 17 ],\n  [ 9, 11, 12, 13, 14, 15, 16, 17 ], [ 10, 11, 12, 13, 14, 15, 16, 17, 18 ] ]\nEvery numerical semigroup can be expressed (though not uniquely) as the intersection of irreducible numerical semigroups.\ngap&gt; t:=NumericalSemigroup(10,11,12,13);\n&lt;Numerical semigroup with 4 generators&gt;\ngap&gt; DecomposeIntoIrreducibles(t);\n[ &lt;Numerical semigroup with 5 generators&gt;,\n  &lt;Numerical semigroup with 6 generators&gt;,\n  &lt;Numerical semigroup with 6 generators&gt; ]\ngap&gt; List(last,MinimalGenerators);\n[ [ 10, 11, 12, 13, 15 ], [ 10, 11, 12, 13, 18, 19 ],\n  [ 10, 11, 12, 13, 19, 27 ] ]\nWe can actually find all oversemigroups of t that are irreducible.\ngap&gt; o:=OverSemigroupsNumericalSemigroup(t);;\ngap&gt; oi:=Filtered(o,IsIrreducible);;\ngap&gt; Length(oi);\n35\ngap&gt; t=Intersection(oi);\ntrue\nThere are some special families of symmetric numerical semigroups, as complete intersections, free, telescopic, …\ngap&gt; s:=NumericalSemigroup(4,6,9);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; IsFree(s);\ntrue\ngap&gt; lf:=FreeNumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; List(lf,MinimalGenerators);\n[ [ 2, 21 ], [ 3, 11 ], [ 4, 6, 17 ], [ 4, 9, 14 ], [ 4, 10, 13 ], [ 5, 6 ],\n  [ 5, 8, 12 ], [ 6, 8, 9 ] ]"
  },
  {
    "objectID": "gap-numricalsgps.html#almost-symmetric-numerical-semigroups",
    "href": "gap-numricalsgps.html#almost-symmetric-numerical-semigroups",
    "title": "NumericalSgps",
    "section": "",
    "text": "We can construct almost symmetric numerical semigruops from irreducible numerical semigroups by removing some of its elements.\ngap&gt; AlmostSymmetricNumericalSemigroupsFromIrreducible(s);\n[ &lt;Numerical semigroup&gt;, &lt;Numerical semigroup with 4 generators&gt;,\n  &lt;Numerical semigroup with 4 generators&gt; ]\ngap&gt; List(last,MinimalGenerators);\n[ [ 4, 6, 9 ], [ 4, 6, 13, 15 ], [ 4, 9, 10, 15 ] ]\nActually, one can compute with this idea the set of all almost symmetric numerical semigroups with given Frobenius number.\ngap&gt; la:=AlmostSymmetricNumericalSemigroupsWithFrobeniusNumber(19);;\ngap&gt; Length(la);\n131\ngap&gt; t:=First(la,s-&gt;not(IsIrreducible(s)));\n&lt;Numerical semigroup&gt;\ngap&gt; MinimalGenerators(t);\n[ 4, 6, 21, 23 ]\ngap&gt; Genus(t)=(FrobeniusNumber(t)+Type(t))/2;\ntrue"
  },
  {
    "objectID": "gap-numricalsgps.html#ideals",
    "href": "gap-numricalsgps.html#ideals",
    "title": "NumericalSgps",
    "section": "",
    "text": "An ideal of a numerical semigroup can be defined by means of a generating system.\ngap&gt; s:=NumericalSemigroup(6,9,20);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; i:=[2,3]+s;\ngap&gt; MinimalGenerators(i);\n[ 2, 3 ]\nThe above ideal is not included in its ambient semigroup, and so it is not integral.\ngap&gt; IsIntegral(i);\nfalse\ngap&gt; AmbientNumericalSemigroupOfIdeal(i);\n&lt;Numerical semigroup with 3 generators&gt;\nWe can check membership with in.\ngap&gt; 8 in s;\nfalse\ngap&gt; 8 in i;\ntrue\nIdeals also have conductors, since they are unions of translations of numerical semigroups.\ngap&gt; Conductor(i);\n26\ngap&gt; SmallElements(i);\n[ 2, 3, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\nThe basic operations include intersection, sum, addition, translations and difference.\ngap&gt; j:=10+s;\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; i+j;\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; MinimalGenerators(i+j);\n[ 12, 13 ]\ngap&gt; MinimalGenerators(10+i);\n[ 12, 13 ]\ngap&gt; Difference(i,j);\n[ 2, 3, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 24, 26, 27, 29, 32, 33, 35,\n  38, 41, 44, 47, 53 ]\ngap&gt; MinimalGenerators(Intersection(i,j));\n[ 22, 30 ]\nThe colon operation of ideals of rings translates in ideals of numerical semigroups to \\(I-J=\\{z\\in \\mathbb{Z} \\mid z+J\\subseteq I\\}\\).\ngap&gt; MinimalGenerators(i-j);\n[ -8, -7 ]\nThere are a couple of special ideals, one is the maximal ideal and the other the canonical (unique up to translations).\ngap&gt; m:=MaximalIdealOfNumericalSemigroup(s);\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; c:=CanonicalIdealOfNumericalSemigroup(s);\n&lt;Ideal of numerical semigroup&gt;\ngap&gt; c-(c-i)=i;\ntrue\ngap&gt; MinimalGenerators(m);\n[ 6, 9, 20 ]\ngap&gt; MinimalGenerators(c);\n[ 0 ]\ngap&gt; IsCanonicalIdeal(10+c);\ntrue\nThe blow up of an ideal \\(I\\) of a numerical semigroup \\(S\\) is defined as \\(\\bigcup_{n\\in \\mathbb{N}}(nI-nI)\\).\ngap&gt; MinimalGenerators(BlowUpIdealOfNumericalSemigroup(i));\n[ 0, 1, 2, 3, 4, 5 ]\ngap&gt; List([1..10], n-&gt;HilbertFunctionOfIdealOfNumericalSemigroup(n,i));\n[ 4, 4, 3, 2, 2, 2, 2, 2, 2, 2 ]\nIf the ideal is the maximal ideal, then it coincides with the Lipman semigroup of \\(S\\).\ngap&gt; MinimalGenerators(BlowUpOfNumericalSemigroup(s));\n[ 3, 14 ]\ngap&gt; LipmanSemigroup(s);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; MinimalGenerators(last);\n[ 3, 14 ]\nOne can keep computing Lipman semigroups until we reach \\(\\mathbb{N}\\), and the multiplicities of these semigroups conform the multiplicity sequence of \\(S\\)\ngap&gt; MultiplicitySequenceOfNumericalSemigroup(s);\n[ 6, 3, 3, 3, 3, 2, 1 ]"
  },
  {
    "objectID": "gap-numricalsgps.html#minimal-presentations",
    "href": "gap-numricalsgps.html#minimal-presentations",
    "title": "NumericalSgps",
    "section": "",
    "text": "The set of factorizations of an element in a numerical semigroup can be obtained as follows.\ngap&gt; s:=NumericalSemigroup(6,9,20);\n&lt;Numerical semigroup with 3 generators&gt;\ngap&gt; FactorizationsElementWRTNumericalSemigroup(36,s);\n[ [ 6, 0, 0 ], [ 3, 2, 0 ], [ 0, 4, 0 ] ]\nAnd the set of \\(\\mathcal{R}\\)-classes as\ngap&gt; RClassesOfSetOfFactorizations(last);\n[ [ [ 0, 4, 0 ], [ 3, 2, 0 ], [ 6, 0, 0 ] ] ]\nThe set of Betti elements is\ngap&gt; BettiElementsOfNumericalSemigroup(s);\n[ 18, 60 ]\nAnd a minimal presentation is obtained with\ngap&gt; MinimalPresentationOfNumericalSemigroup(s);\n[ [ [ 1, 6, 0 ], [ 0, 0, 3 ] ], [ [ 3, 0, 0 ], [ 0, 2, 0 ] ] ]\nRecall that we can produce this also by using elimination.\ngap&gt; x:=Indeterminate(Rationals,\"x\");;  \ngap&gt; y:=Indeterminate(Rationals,\"y\");;\ngap&gt; z:=Indeterminate(Rationals,\"z\");;\ngap&gt; t:=Indeterminate(Rationals,\"t\");;\ngap&gt; R:=PolynomialRing(Rationals,[x,y,z,t]);\nRationals[x,y,z,t]\ngap&gt; i:=Ideal(R,[x-t^6,y-t^9,z-t^20]);\n&lt;two-sided ideal in Rationals[x,y,z,t], (3 generators)&gt;\ngap&gt; GroebnerBasis(i,EliminationOrdering([t]));\n[ x^3-y^2, x*y^6-z^3, y^8-x^2*z^3, -x^2*y+z*t, y^5*t-x*z^2, x^2*y^3*t-z^2,\n  y^2*t^2-z, y*t^3-x^2, x*t^3-y, t^6-x ]\nThe graph \\(G_n\\) can be calculated in the following way.\ngap&gt; GraphAssociatedToElementInNumericalSemigroup(60,s);\n[ [ 6, 9, 20 ], [ [ 6, 9 ] ] ]\nIn this example, it has three vertices and a single edge.\nWe can also calculate the shaded set of an element.\ngap&gt; ShadedSetOfElementInNumericalSemigroup(60,s);\n[ [  ], [ 6 ], [ 6, 9 ], [ 9 ], [ 20 ] ]\nThe Hilbert series (or generating function of \\(S\\)) is computed via the polynomial associated to \\(S\\).\ngap&gt; HilbertSeriesOfNumericalSemigroup(s,x);\n(x^44-x^43+x^38-x^37+x^35-x^34+x^32-x^31+x^29-x^28+x^26-x^25+x^24-x^22+x^20-x^19+x^18-x^16+x^15-x^13+x^12-x^10+x^9-x^7+x^6-x+1)/(-x+1)\ngap&gt; NumericalSemigroupPolynomial(s,x);\nx^44-x^43+x^38-x^37+x^35-x^34+x^32-x^31+x^29-x^28+x^26-x^25+x^24-x^22+x^20-x^19+x^18-x^16+x^15-x^13+x^12-x^10+x^9-x^7+x^6-x+1\nActually, this polynomial has all its roots in the unit circle.\ngap&gt; IsKroneckerPolynomial(last);\ntrue\n## Nonunique factorization invariants\nWe already know how to compute the set of factorizations of an element in the semigroup. The set of lengths is calculated as follows.\n\n\ngap&gt; LengthsOfFactorizationsElementWRTNumericalSemigroup(100,s);\n[ 5, 9, 10, 11, 12 ]\n### Elasticity\nThe elasticity of an element and of the whole numerical semigroup can be computed with the following functions.\ngap&gt; ElasticityOfFactorizationsElementWRTNumericalSemigroup(100,s);\n12/5\ngap&gt; ElasticityOfNumericalSemigroup(s);\n10/3\n### Delta sets\nThe set of distances or Delta set:\ngap&gt; DeltaSetOfFactorizationsElementWRTNumericalSemigroup(100,s);\n[ 1, 4 ]\nOr even of the whole semigroups\ngap&gt; DeltaSetOfNumericalSemigroup(s);\n[ 1 .. 4 ]\nRecall that the maximum is reached in the Betti elements of the semigroup.\ngap&gt; List(B,b-&gt;DeltaSetOfFactorizationsElementWRTNumericalSemigroup(b,s));\n[ [ 1 ], [ 1, 4 ] ]\n\n\n\nThe catenary degree of a numerical semigroup is achieved in one of its Betti elements.\ngap&gt; List(B, b-&gt;CatenaryDegreeOfElementInNumericalSemigroup(b,s));\n[ 3, 7 ]\ngap&gt; CatenaryDegreeOfNumericalSemigroup(s);\n7\n\n\n\nThe omega primality of an element or of the semigroup (maximum of its atoms) can be computed as follows.\ngap&gt; OmegaPrimalityOfElementInNumericalSemigroup(100,s);\n20\ngap&gt; OmegaPrimalityOfNumericalSemigroup(s);\n10\nBecause for the atoms we obtain\ngap&gt; A:=MinimalGenerators(s);\n[ 6, 9, 20 ]\ngap&gt; List(A, a-&gt;OmegaPrimalityOfElementInNumericalSemigroup(a,s));\n[ 3, 3, 10 ]\n\n\n\nWe have specific funtions to compute the tame degree of an element in a numerical semigroup and the tame degree of the whole semigroup.\ngap&gt; TameDegreeOfElementInNumericalSemigroup(100,s);\n7\ngap&gt; TameDegreeOfNumericalSemigroup(s);\n10\ngap&gt; l:=Intersection(s,[1..100]);\n[ 6, 9, 12, 15, 18, 20, 21, 24, 26, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40,\n  41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n  80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\n  99, 100 ]\ngap&gt; List(l,x-&gt;TameDegreeOfElementInNumericalSemigroup(x,s));\n[ 0, 0, 0, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 0, 0, 3, 3, 0, 0, 0, 3, 3, 3, 0, 3,\n  3, 0, 3, 0, 0, 0, 3, 0, 3, 0, 3, 0, 10, 0, 3, 3, 3, 3, 10, 3, 3, 10, 3, 0,\n  10, 0, 3, 10, 3, 0, 10, 0, 7, 10, 3, 3, 10, 3, 7, 10, 3, 7, 10, 0, 7, 10,\n  3, 0, 10, 0, 3, 10, 7 ]"
  },
  {
    "objectID": "gap-numricalsgps.html#random",
    "href": "gap-numricalsgps.html#random",
    "title": "NumericalSgps",
    "section": "",
    "text": "Looking for a four generated numerical semigroup with 7 relators.\ngap&gt; l:=List([1..20], _-&gt;RandomNumericalSemigroup(5,500));;\ngap&gt; ll:=Filtered(l, s-&gt;EmbeddingDimension(s)=4);;\ngap&gt; Filtered(ll, s-&gt;Length(MinimalPresentationOfNumericalSemigroup(s))=7);\ngap&gt; MinimalGenerators(last[1]);\n[ 315, 318, 485, 493 ]"
  },
  {
    "objectID": "Exercises/exercises.html",
    "href": "Exercises/exercises.html",
    "title": "Exercises: numerical semigroups",
    "section": "",
    "text": "Let \\(S=\\langle n_1,\\ldots, n_e\\rangle\\) and let \\(c_i=\\min\\lbrace k\\in \\mathbb{N}\\setminus\\lbrace 0\\rbrace  : kn_i\\in \\langle \\lbrace n_1,\\ldots,n_e\\rbrace \\setminus\\lbrace n_i\\rbrace \\rangle \\rbrace\\). Prove that \\(c_in_i\\) is a Betti element for all \\(i\\in\\lbrace 1,\\ldots,e\\rbrace\\).\nLet \\(S=\\langle a,b\\rangle\\). Show that \\(\\mathrm{Betti}(S)=\\lbrace a b\\rbrace\\).\nLet \\(S=\\langle n_1,n_2,n_3\\rangle\\). Prove that \\(\\mathrm{Betti}(S)=\\lbrace c_1n_1,c_2n_2,c_3n_3\\rbrace\\), with \\(c_i\\) defined as above.\nFind an example of a numerical semigroup \\(S=\\langle n_1,\\ldots, n_e\\rangle\\) such that \\(\\lbrace c_1n_1,\\ldots, c_en_e\\rbrace \\subsetneq \\mathrm{Betti}(S)\\).\nFind two essentially different minimal presentations of \\(\\langle 4,6,9\\rangle\\).\n\n\n\n\n\nLet \\(S=\\langle 4,6,9\\rangle\\). Find all \\(s\\in S\\) such that \\(\\chi(\\mathcal{F}(s))\\neq 0\\). Compute the Hilbert series of \\(S\\).\nLet \\(S=\\langle n_1,\\ldots, n_e\\rangle\\). Prove that \\[\\prod_{i=1}^e (1-x^{n_i})=\\sum_{s\\in S} \\mathfrak{d}(s)x^s,\\] where \\(\\mathfrak{d}(s)=|\\mathsf{Z}(s)|\\), the denumerant of \\(s\\).\nLet \\(S=\\langle 5, 7, 11, 13\\rangle\\). Draw \\(\\mathcal{F}'(28)\\).\n\n\n\n\n\nLet \\(S=\\langle a,b\\rangle\\). Find \\(\\mathsf{L}(S)\\).\nCompute \\(\\rho(20)\\) with \\(20\\in \\langle 3,5,7\\rangle\\).\nLet \\(S=\\langle 4,6,9\\rangle\\). Compute \\(\\Delta(S)\\) and \\(\\mathsf{c}(S)\\).\nFind a numerical semigroup with catenary degree \\(4\\).\nLet \\(M\\) be a subgroup of \\(\\mathbb Z^n\\). Let \\(\\sigma_M\\) be the binary relation defined as \\((a,b)\\in \\sigma_M\\) if \\(a-b\\in M\\). Prove that \\(\\sigma_M\\) is a congruence, and that if \\(S\\) is a numerical semigroup, then \\(\\ker(\\varphi)=\\sigma_{M_S}\\), where \\(M_S=\\lbrace a-b : \\varphi(a)=\\varphi(b)\\rbrace\\) and \\(\\varphi\\) is the usual factorization homomorphism of \\(S\\).\n\n\n\n\n\nLet \\(S=\\langle 4,6,9\\rangle\\). Compute \\(\\delta_{FR}(14)\\).\nLet \\(S\\) be a numerical semigroup with multplicity \\(m\\). Prove that $|(S,n)| : n=|(S,n)| : n,,m$."
  },
  {
    "objectID": "Exercises/exercises.html#minimal-presentations",
    "href": "Exercises/exercises.html#minimal-presentations",
    "title": "Exercises: numerical semigroups",
    "section": "",
    "text": "Let \\(S=\\langle n_1,\\ldots, n_e\\rangle\\) and let \\(c_i=\\min\\lbrace k\\in \\mathbb{N}\\setminus\\lbrace 0\\rbrace  : kn_i\\in \\langle \\lbrace n_1,\\ldots,n_e\\rbrace \\setminus\\lbrace n_i\\rbrace \\rangle \\rbrace\\). Prove that \\(c_in_i\\) is a Betti element for all \\(i\\in\\lbrace 1,\\ldots,e\\rbrace\\).\nLet \\(S=\\langle a,b\\rangle\\). Show that \\(\\mathrm{Betti}(S)=\\lbrace a b\\rbrace\\).\nLet \\(S=\\langle n_1,n_2,n_3\\rangle\\). Prove that \\(\\mathrm{Betti}(S)=\\lbrace c_1n_1,c_2n_2,c_3n_3\\rbrace\\), with \\(c_i\\) defined as above.\nFind an example of a numerical semigroup \\(S=\\langle n_1,\\ldots, n_e\\rangle\\) such that \\(\\lbrace c_1n_1,\\ldots, c_en_e\\rbrace \\subsetneq \\mathrm{Betti}(S)\\).\nFind two essentially different minimal presentations of \\(\\langle 4,6,9\\rangle\\)."
  },
  {
    "objectID": "Exercises/exercises.html#shaded-sets",
    "href": "Exercises/exercises.html#shaded-sets",
    "title": "Exercises: numerical semigroups",
    "section": "",
    "text": "Let \\(S=\\langle 4,6,9\\rangle\\). Find all \\(s\\in S\\) such that \\(\\chi(\\mathcal{F}(s))\\neq 0\\). Compute the Hilbert series of \\(S\\).\nLet \\(S=\\langle n_1,\\ldots, n_e\\rangle\\). Prove that \\[\\prod_{i=1}^e (1-x^{n_i})=\\sum_{s\\in S} \\mathfrak{d}(s)x^s,\\] where \\(\\mathfrak{d}(s)=|\\mathsf{Z}(s)|\\), the denumerant of \\(s\\).\nLet \\(S=\\langle 5, 7, 11, 13\\rangle\\). Draw \\(\\mathcal{F}'(28)\\)."
  },
  {
    "objectID": "Exercises/exercises.html#factorizations",
    "href": "Exercises/exercises.html#factorizations",
    "title": "Exercises: numerical semigroups",
    "section": "",
    "text": "Let \\(S=\\langle a,b\\rangle\\). Find \\(\\mathsf{L}(S)\\).\nCompute \\(\\rho(20)\\) with \\(20\\in \\langle 3,5,7\\rangle\\).\nLet \\(S=\\langle 4,6,9\\rangle\\). Compute \\(\\Delta(S)\\) and \\(\\mathsf{c}(S)\\).\nFind a numerical semigroup with catenary degree \\(4\\).\nLet \\(M\\) be a subgroup of \\(\\mathbb Z^n\\). Let \\(\\sigma_M\\) be the binary relation defined as \\((a,b)\\in \\sigma_M\\) if \\(a-b\\in M\\). Prove that \\(\\sigma_M\\) is a congruence, and that if \\(S\\) is a numerical semigroup, then \\(\\ker(\\varphi)=\\sigma_{M_S}\\), where \\(M_S=\\lbrace a-b : \\varphi(a)=\\varphi(b)\\rbrace\\) and \\(\\varphi\\) is the usual factorization homomorphism of \\(S\\)."
  },
  {
    "objectID": "Exercises/exercises.html#divisors",
    "href": "Exercises/exercises.html#divisors",
    "title": "Exercises: numerical semigroups",
    "section": "",
    "text": "Let \\(S=\\langle 4,6,9\\rangle\\). Compute \\(\\delta_{FR}(14)\\).\nLet \\(S\\) be a numerical semigroup with multplicity \\(m\\). Prove that $|(S,n)| : n=|(S,n)| : n,,m$."
  },
  {
    "objectID": "1-First steps GAP.html",
    "href": "1-First steps GAP.html",
    "title": "First steps in GAP",
    "section": "",
    "text": "GAP is a discrete algebraic computing environment (GAP stands for Groups, Algorithms, and Programming). It has a core implemented in c and has separate libraries written in its own programming language.\nThis language is procedural, so people who have programmed in pascal, c, maple, … have no problems in adapting. On the official GAP website you can find a lot of information concerning installation on different platforms, tutorials, manuals, and packages.\nGAP packages go through a refereeing process similar to that of scientific journals. They are first deposited (and publicly accessible on the official website) and if accepted they become part of the distribution.\nGAP has been maintained throughout its history by several universities, and is supported by contributions from users in the form of packages for more specific purposes.",
    "crumbs": [
      "First steps in GAP"
    ]
  },
  {
    "objectID": "1-First steps GAP.html#command-line",
    "href": "1-First steps GAP.html#command-line",
    "title": "First steps in GAP",
    "section": "Command line",
    "text": "Command line\nGAP is an interpreted language (although it has a compiler). Operations can be performed directly on the command line, or scripted files written in a text editor can be read.\nGAP is normally invoked using the gap command, although depending on the operating system there may be different alternatives. Once the interpreter is started, a command line appears that looks like this.\ngap&gt;\nTo edit the entries you want to evaluate, you can use the arrow keys together with the start and end keys. There is also the possibility of using key combinations similar to those used in a unix shell (ctr-[b,f,p,n,a,e]). The tab key is used to complete commands from the text you have entered at that moment. Thus typing Gcd+TAB results in:\ngap&gt; Gcd\n    Gcd\n    GcdCoeffs\n    GcdInt\n    GcdOp\n    GcdRepresentation\n    GcdRepresentationOp\n    Gcdex\nTo exit the command line, you can use the command quit;, or press ctr-d.\nThe end of a line is not indicated by a carriage return, but by ; (to evaluate, press enter). This allows you to write multi-line statements.\ngap&gt; 1+\n&gt; 2;\n3\nOn jupyter to evaluate you have to press shift+enter.\n\n1+\n2+3;\n\n6\n\n\nThe working session can be stored in a file for later editing using the LogTo command. With LogTo(\"tests/log\"); we save to the log file in the tests folder. With LogTo(); we interrupt the recording.\nWe can read a script with the Read command (in this example one.g contains only a:=1;).\n\nRead(\"pruebas/uno.g\");\n\n\na;\n\n1\n\n\nNote that the slashes are in the form /, even on windows.\nHelp is accessed using a question mark. For example, ?LogTo shows help for that command.\nThe operations of addition and product depend on the arguments that accompany them. They can represent the sum of integers, or of matrices, or of vector subspaces… The product can even mean the composition of two permutations, and the power (^) the image of a point by a permutation.\n\n[1,2,3]+[1,2,7,8];\n\n[ 2, 4, 10, 8 ]\n\n\n\n(1,2)*(2,5);\n\n(1,5,2)\n\n\n\n1^(1,2,3);\n\n2\n\n\nThe symbols =, &lt;, &gt;, &lt;=, &gt;=, and &lt;&gt; are used to denote equality, less than, greater than, less than or equal, greater than or equal, and different, respectively sirven para denotar igualdad, ser mayor, menor, menor o igual, mayor o igual y distinto, respectivamente.\n\n2=1+1;\n\ntrue\n\n\n\n[1,2]&lt;[3];\n\ntrue\n\n\n\n[1,2]&gt;[1,3];\n\nfalse\n\n\n\n1&lt;&gt;1;\n\nfalse",
    "crumbs": [
      "First steps in GAP"
    ]
  },
  {
    "objectID": "1-First steps GAP.html#registers",
    "href": "1-First steps GAP.html#registers",
    "title": "First steps in GAP",
    "section": "Registers",
    "text": "Registers\nIn gap we can create records with custom fields using rec.\n\nr:=rec(a:=1,b:=\"2\");\n\nrec( a := 1, b := \"2\" )\n\n\nWe can add new fields, or modify existing ones, simply by assigning them a value.\n\nr.c:=rec(d:=1,e:=3);\n\nrec( d := 1, e := 3 )\n\n\n\nr;\n\nrec( a := 1, b := \"2\", c := rec( d := 1, e := 3 ) )\n\n\n\nr.a:=5;\n\n5\n\n\n\nr;\n\nrec( a := 5, b := \"2\", c := rec( d := 1, e := 3 ) )\n\n\nTo access a field value, we use ..\n\nr.c.d;\n\n1\n\n\nWe can see the fields defined with RecNames.\n\nRecNames(r);\n\n[ \"b\", \"a\", \"c\" ]\n\n\nOr see whether a field is assigned or not\n\nIsBound(r.g);\n\nfalse\n\n\n\nUnbind(r.b);\n\n\nr;\n\nrec( a := 5, c := rec( d := 1, e := 3 ) )\n\n\nAs with lists, if you want to make a copy, it is advisable to use ShallowCopy.\n\nrr:=ShallowCopy(r);\n\nrec( a := 5, c := rec( d := 1, e := 3 ) )\n\n\n\nrr.c.d:=4;\n\n4\n\n\n\nr;\n\nrec( a := 5, c := rec( d := 4, e := 3 ) )\n\n\nThe problem here is that r itself contains another record. To avoid this, we use StructuralCopy.\n\nrr:=StructuralCopy(r);\n\nrec( a := 5, c := rec( d := 4, e := 3 ) )\n\n\n\nrr.c.d:=1;\n\n1\n\n\n\nr;\n\nrec( a := 5, c := rec( d := 4, e := 3 ) )\n\n\n\nrr;\n\nrec( a := 5, c := rec( d := 1, e := 3 ) )",
    "crumbs": [
      "First steps in GAP"
    ]
  },
  {
    "objectID": "6-numericalsgps-fifth-session.html",
    "href": "6-numericalsgps-fifth-session.html",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "LoadPackage(\"num\");\n\ntrue",
    "crumbs": [
      "Non-unique factorization invariants, primality, divisors"
    ]
  },
  {
    "objectID": "6-numericalsgps-fifth-session.html#length-based-factorization-invariants",
    "href": "6-numericalsgps-fifth-session.html#length-based-factorization-invariants",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Length based factorization invariants",
    "text": "Length based factorization invariants\nLet \\(S\\) be minimally generated by \\(\\{n_1,\\dots,n_e\\}\\). \\[\n\\varphi_S:\\mathbb{N}^e \\to S, \\varphi_S(e_i)=n_i.\n\\]\nRecall that the set of factorizations of an element \\(s\\in S\\) is \\(\\mathsf{Z}(s)=\\varphi_S^{-1}(s)\\), that is, \\[ \\mathsf{Z}(s)=\\{ (a_1,\\dots,a_e)\\in \\mathbb{N}^e : a_1n_1+\\dots+a_en_e =s\\}.\\]\n\nSets of lengths of factorizations\nThe length of a factorization \\(z=(z_1,\\dots,z_e)\\) is the number of minimal generators involved in it, that is, \\(|z|=z_1+\\dots+z_e\\). We define the set of lenghts of the factorizations of \\(s\\) as \\[ \\mathsf{L}(s)= \\{ |z| : z\\in \\mathsf{Z}(s)\\}.\\]\n\ns:=NumericalSemigroup(3,5,7);;\n\n\nFactorizations(10,s);\n\n[ [ 0, 2, 0 ], [ 1, 0, 1 ] ]\n\n\n\nLengthsOfFactorizationsElementWRTNumericalSemigroup(200,s);\n\n[ 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66 ]\n\n\n\nLength(Factorizations(200,s));\n\n205\n\n\n\n\nDelta sets\nOne can arrange the lengths of the factorizations of an element \\(s\\) in the following way \\(\\mathsf{L}(s)=\\{l_1&lt;\\dots&lt;l_t\\}\\). The Delta set of \\(s\\) is then defined as \\(\\Delta(s)=\\{l_2-l_1,l_3-l_2,\\dots, l_t-l_{t-1}\\}\\).\n\nDeltaSet(200,s);\n\n[ 2 ]\n\n\nThe Delta set of \\(S\\) is the union of all the delta sets of its elements.\n\nDeltaSet(s);\n\n[ 2 ]\n\n\nRecall that a minimal presentation of \\(s\\) was\n\nrho:=MinimalPresentation(s);\n\n[ [ [ 0, 0, 2 ], [ 3, 1, 0 ] ], [ [ 0, 1, 1 ], [ 4, 0, 0 ] ],   [ [ 0, 2, 0 ], [ 1, 0, 1 ] ] ]\n\n\nAnd that one can “walk” from a factorization to any other factorization of the same element by using this minimal relations.\n\nSet(rho, p-&gt;AbsInt(Sum(p[1]-p[2])));\n\n[ 0, 2 ]\n\n\nSo it comes as no surprise that \\(\\Delta(S)=\\{2\\}\\). In fact, it is not difficult to prove \\(\\min(\\Delta(S))=\\gcd\\{ |a-b| : (a,b)\\in \\sigma\\}\\), with \\(\\sigma\\) any minimal presentation of \\(S\\), and that \\(\\max(\\Delta(S))=\\max\\{\\Delta(b) : b\\in \\operatorname{Betti}(S)\\}\\).\nThe idea behing the minimum is that any possible “jump” will be a linear combination of the “jumps” in the minimal relations. As for the maximum, “jumps” are preserved under translations, and thus the largest “jump” will be achieved between two factorizations with no commom support and in a Betti element.\nThe structure of \\(\\Delta(S)\\) is very well known when \\(S\\) has embedding dimension two or three, and even when it is generated by an arithmetice sequence.\n\ns:=NumericalSemigroup(10,11,13,17);\n\n&lt;Numerical semigroup with 4 generators&gt;\n\n\n\nDeltaSet(s);\n\n[ 1 ]\n\n\n\nMinimalPresentation(s);\n\n[ [ [ 0, 0, 0, 2 ], [ 1, 1, 1, 0 ] ], [ [ 0, 0, 1, 1 ], [ 3, 0, 0, 0 ] ],   [ [ 0, 0, 3, 0 ], [ 0, 2, 0, 1 ] ], [ [ 0, 1, 2, 0 ], [ 2, 0, 0, 1 ] ],   [ [ 0, 3, 0, 0 ], [ 2, 0, 1, 0 ] ] ]\n\n\n\nBettiElements(s);\n\n[ 30, 33, 34, 37, 39 ]\n\n\n\nList(BettiElements(s),b-&gt;DeltaSet(b,s));\n\n[ [ 1 ], [  ], [ 1 ], [  ], [  ] ]\n\n\n\n\nThe elasticity\nThe elasticity of the factorizations of an element \\(s\\) in a numerical semigroup \\(S\\) is ratio between the largest length and smallest lenght of its factorizations, that is, \\[\n\\rho(s)=\\frac{\\max(\\mathsf{L}(s))}{\\min(\\mathsf{L}(s))}.\n\\] The elasticity of the semigroup \\(S\\) is defined as \\[\n\\rho(S)=\\sup\\{ \\rho(s) : s\\in S\\}.\n\\]\nFor numerical semigroups, this supremum becomes a maximum, and the elasticity is attained at the element \\(n_1 n_e\\) (the product of the smallest generator times the largest generator).\n\nElasticity(100,s);\n\n10/7\n\n\n\nElasticity(s);\n\n17/10\n\n\n\nElasticity(10*17,s);\n\n17/10",
    "crumbs": [
      "Non-unique factorization invariants, primality, divisors"
    ]
  },
  {
    "objectID": "6-numericalsgps-fifth-session.html#distance-based-factorization-invariants",
    "href": "6-numericalsgps-fifth-session.html#distance-based-factorization-invariants",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Distance based factorization invariants",
    "text": "Distance based factorization invariants\nGiven \\(x=(x_1,\\dots,x_e)\\) and \\(y=(y_1,\\dots,y_e)\\) in \\(\\mathbb{N}^e\\), their “common part” is \\[\nx\\wedge y = (\\min\\{x_1,y_1\\},\\dots,\\min\\{x_e,y_e\\}),\n\\] and the distance between \\(x\\) and \\(y\\) as \\[\n\\operatorname{d}(x,y)=\\max\\{|x-(x\\wedge y)|, |y-(x\\wedge y)|\\}.\n\\]\n\ns:=NumericalSemigroup(10,13,19,21);;\n\nWe have already used DotEliahouGraph, the labels of the edges are the distances between de factorizations they connect.\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(100,s)));\n\n\n\n\n\n\n\n\n\nThe catenary degree\nIn addition, DotFactorizationGraph draws a minimum spanning tree.\n\nJupyterSplashDot(DotFactorizationGraph(Factorizations(100,s)));\n\n\n\n\n\n\n\n\nIn particular, this means that we can go from any factorization of \\(100\\) in \\(S\\) to any other factorization of the same element by using a path such that two consecutive nodes are at a distance of at most four. This is precisely the idea behind the concept of catenary degree.\nLet \\(z\\) and \\(z'\\) be two factorizations of \\(s\\). An \\(N\\)-chain joining \\(z\\) and \\(z'\\) is a sequence \\(z_1,\\dots,z_t\\) of factorizations of \\(s\\) such that \\(\\operatorname{d}(z_i,z_{i+1})\\le N\\). The catenary degree of \\(s\\), denoted \\(\\operatorname{c}(s)\\), in the minimum \\(N\\) such that for any two factorizations of \\(s\\) there exists an \\(N\\)-chain connecting them.\nThe catenary degree of \\(S\\) is \\[\n\\operatorname{c}(S)=\\sup\\{ \\operatorname{c}(s) : s\\in S\\}.\n\\]\nThis supremum is a maximum.\n\nCatenaryDegree(100,s);\n\n4\n\n\n\nCatenaryDegree(s);\n\n4\n\n\n\nCatenaryDegree(200,s);\n\n4\n\n\n\nLength(Factorizations(200,s));\n\n40\n\n\nRecall that by using the minimal relations of \\(S\\) we can find a path joining any two different factorizations of an element. Thus, it is not hard to prove that the maximum of the catenary degree of \\(S\\) is attained at one of its Betti elements.\n\nSet(BettiElements(s), b-&gt;CatenaryDegree(b,s));\n\n[ 3, 4 ]\n\n\n\n\nThe tame degree\nThe catenary degree measures the minimum distance needed to find paths connecting any two factorizations of an element in the semigroup in such a way that every step in the path is withing that minimum distance.\nThe tame degree intends to measure a radius \\(r\\) in which for any factorization \\(z\\) of \\(s\\in S\\), with \\(s-n_i\\in S\\), you will find another factorization \\(z'\\) such that \\(\\operatorname{d}(z,z')\\le r\\) and \\(z_i'\\neq 0\\).\nLet \\(s\\in S\\) such that \\(s-n_i\\in S\\) for some \\(i\\in\\{1,\\dots,e\\}\\). Define \\(\\mathsf{Z}_i(s)=\\{z : z\\in \\mathsf{Z}(s), z_i\\neq 0\\}\\), which is nonempty as \\(s-n_i\\in S\\). Set \\[\n\\operatorname{t}_i(s)=\\sup\\{\\operatorname{d}(z,\\mathsf{Z}_i(s)) : z \\in \\mathsf{Z}(n)\\},\n\\] and \\[\n\\operatorname{t}(s)=\\max\\{\\operatorname{t}_i(s) : s-n_i\\in S, i\\in\\{1,\\dots,e\\}\\}.\n\\]\nThe tame degree of \\(S\\) is defined as \\[\n\\operatorname{t}(S)=\\sup\\{ \\operatorname{t}(s) : s\\in S\\}.\n\\]\n\ns:=NumericalSemigroup( 24, 59, 114);\n\n&lt;Numerical semigroup with 3 generators&gt;\n\n\n\nTameDegree(s);\n\n29\n\n\nUsually the tame degre is not attained at the Betti elements.\n\nSet(BettiElements(s),b-&gt;TameDegree(b,s));\n\n[ 11, 19 ]\n\n\nIt can be shown that the tame degree of \\(S\\) is attained at an element \\(s\\in S\\) such that \\(s\\) has a factorization in \\(\\operatorname{Minimals}_\\le (\\mathsf{Z}(n_i+S))\\) for some \\(i\\in\\{1,\\dots,e\\}\\). Elements having this property are of the form \\(n_i+w\\) with \\(w\\in \\operatorname{Ap}(S,n_j)\\), more specifically, there exists \\(i,j\\in \\{1,\\dots,e\\}\\) such that \\(s-n_i,s-n_j\\in S\\) and \\(s-(n_i+n_j)\\not\\in S\\).\nFor \\(s\\in S\\), the Rosales graph \\(G_s\\) is defined as follows. The vertices of \\(G_s\\) are the minimal generators \\(n_i\\) such that \\(s-n_i\\in S\\), and \\(n_in_j\\) is an edge whenever \\(s-(n_i+n_j)\\in S\\).\n\nJupyterSplashDot(DotRosalesGraph(400,s));\n\n\n\n\n\n\n\n\n\nBettiElements(s);\n\n[ 354, 456 ]\n\n\n\nJupyterSplashDot(DotRosalesGraph(456,s));\n\n\n\n\n\n\n\n\n\nJupyterSplashDot(DotRosalesGraph(354,s));\n\n\n\n\n\n\n\n\nThe number of connected components of \\(G_s\\) coincides with the set of \\(R\\)-classes of the set of factorizations of \\(s\\). Thus the catenary degree is attained in an \\(s\\) with \\(G_s\\) not connected, and the tame degree in an \\(s\\) with \\(G_s\\) not complete.\n\n\nPrimality\nRecall that \\(S\\) induces an order over the integers \\(a\\le_S b\\) if \\(b-a\\in S\\). If \\(a\\) and \\(b\\) are in \\(S\\), then we say that \\(a\\) divides \\(b\\) if \\(b-a\\in S\\). In this way, minimal generators (irreducibles, atoms, primitive elements) are those not having proper divisors. A natural question arises: are there “prime” elements in a numerical semigroup. The ones to be candidates to be prime are the minimal generators of the semigroup.\nLet \\(S\\) be minimally generated by \\(\\{n_1,\\dots,n_e\\}\\). Consider the set \\(\\operatorname{Minimals}_\\le (\\mathsf{Z}(n_i+S))\\). Notice that \\(S\\setminus(n_i+S)=\\operatorname{Ap}(S,n_i)\\), and so the set \\(\\mathsf{Z}(n_i+S)=\\mathbb{N^e}\\setminus \\mathsf{Z}(\\operatorname{Ap}(S,n_i))\\). Let \\(z \\in \\operatorname{Minimals}_\\le (\\mathsf{Z}(n_i+S))\\), \\(z\\neq e_i\\). Then \\(n_i\\) divides \\(\\varphi_S(z)\\) and cannot divide any of its “factors”. Hence, \\(n_i\\) cannot be prime.\nLet \\(s\\in S\\). The \\(\\omega\\)-primality of \\(S\\), \\(\\omega(S,s)\\), is defined as the least integer \\(N\\) such that whenever \\(s\\) divides \\(a_1+\\dots+a_n\\) for some \\(a_1,\\dots,a_n\\in S\\), then \\(s\\) divides \\(a_{i_1}+\\dots+a_{i_N}\\) for some \\(\\{i_1,\\dots,i_N\\}\\subseteq \\{1,\\dots,n\\}\\). By an argument similar to the one given above, \\[\n\\omega(S,s)= \\max \\{ |z| : z\\in \\operatorname{Minimals}_\\le (\\mathsf{Z}(s+S))\\}.\n\\]\n\ns:=NumericalSemigroup(3,5,7);\n\n&lt;Numerical semigroup with 3 generators&gt;\n\n\n\nOmegaPrimality(10,s);\n\n5\n\n\nObserve that if \\(z\\in \\operatorname{Minimals}_\\le(\\mathsf{Z}(s+S))\\), then \\(\\varphi(z)=s+t\\) for some \\(t\\in S\\). Let \\(i\\) be such \\(z_i\\neq 0\\). Then \\(z-z_i\\not\\in \\mathsf{Z}(s+S)\\), and thus \\(s+t-n_i\\not\\in s+S\\), which means that \\(t\\in \\operatorname{Ap}(S,n_i)\\). This limits the search for computing \\(\\operatorname{Minimals}_\\le(\\mathsf{Z}(s+S))\\).\nThere is an alternative way to compute the set \\(\\operatorname{Minimals}_\\le(\\mathsf{Z}(s+S))\\). Observe that \\(x\\in \\mathsf{Z}(s+S)\\) if and only if \\(n_1x_1+\\dots+x_en_e=s+n_1t_1+\\dots+n_et_e\\) for some \\(t_1,\\dots,t_e\\in \\mathbb{N}\\). So we can solve the problem by looking at the nonnegative integer solutions (in \\(\\mathbb{N}^{2e}\\)) to the equation \\[n_1x_1+\\dots+x_en_e-n_1t_1-\\dots-n_et_e=s\\] and then project onto the first \\(e\\) coordinates.\nThe omega primality of \\(S\\) is defined as the maximum of the omega primalities of its minimal generators.\n\nOmegaPrimality(s);\n\n4\n\n\nIt can be shown that \\[\n2+\\max(\\Delta(S))\\le \\operatorname{c}(S)\\le \\omega(S)\\le \\operatorname{t}(S).\n\\]\n\n\nDivisors\nLet \\(s\\) be an element in a numerical semigroup \\(S\\). The set of divisors of \\(s\\) is \\[\n\\operatorname{D}(s)=\\{ n\\in S : s-n\\in S\\}.\n\\]\nThe Feng-Rao distance of \\(s\\) is defined as \\[\n\\delta_{FR}(s)=\\min\\{ \\# \\operatorname{D}(s') : s\\le s', s'\\in S\\}.\n\\]\nLet \\(c\\) be the conductor of \\(S\\) and let \\(g\\) be its genus. It can be shown that for \\(s\\ge 2c-1\\), \\[\n\\delta_{FR}(s)=s+1-2g.\n\\]\n\nndiv:={x,s}-&gt;Length(DivisorsOfElementInNumericalSemigroup(x,s));;\ns:=NumericalSemigroup(3,5,7);;\nList(s{[1..20]}, x-&gt;ndiv(x,s));\n\n[ 1, 2, 2, 3, 2, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 ]\n\n\n\nFengRaoDistance(s,1,10);\n\n5\n\n\nThe generalized Feng-Rao distance is defined as \\[\n\\delta_{FR}^r=\\min\\{\\#\\operatorname{D}(s_1,\\dots,s_r) : s\\le s_1\\le \\dots \\le s_r, s_1,\\dots,s_r\\in S\\},\n\\] where \\(\\operatorname{D}(s_1,\\dots,s_r)=\\bigcup_{i=1}^r \\operatorname{D}(s_i)\\). It can be shown that for \\(s\\ge 2c-1\\), \\[\n\\delta_{FR}^r(s)= s+1 -2g + E(S,r).\n\\] The constant \\(E(S,r)\\) is known as the \\(r\\)th Feng-Rao number. For \\(r=2\\), \\[\nE(S,2)=\\min\\{\\#\\operatorname{Ap}(S,n) : r\\in \\{1,\\dots,\\operatorname{m}(S)\\}\\}.\n\\] The definition of the Apéry set for elements not in \\(S\\) is the same as the one given above.\n\ns:=NumericalSemigroup(5,6);\n\n&lt;Numerical semigroup with 2 generators&gt;\n\n\n\nSmallElements(s);\n\n[ 0, 5, 6, 10, 11, 12, 15, 16, 17, 18, 20 ]\n\n\n\nAperyList(s,1);\n\n[ 0, 5, 10, 15, 20 ]\n\n\n\nGaps(s);\n\n[ 1, 2, 3, 4, 7, 8, 9, 13, 14, 19 ]\n\n\nThe cardinality of \\(\\operatorname{Ap}(S,1)\\) is the number of deserts of \\(S\\).\n\nAperyList(s,-1);\n\n[ 0, 6, 12, 18 ]",
    "crumbs": [
      "Non-unique factorization invariants, primality, divisors"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html",
    "href": "7-numericalsgps-seventh-session.html",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "Let \\(S\\) be a numerical semigroup. A subset \\(I\\) of \\(\\mathbb{Z}\\) is an ideal of \\(S\\) if \\(I+S\\subseteq I\\) and there exists \\(s\\in S\\) such that \\(s+I\\subseteq S\\) (this last condition is equivalent to saying that \\(I\\) has a minimum).\nThere are a couple of “standard” ideals of \\(S\\). The maximal ideal, \\(S^*\\), and the standard canonical ideal\n\\[\n\\operatorname{K}(S)=\\{z \\in \\mathbb{Z} : \\operatorname{F}(S)-z\\not\\in S\\}.\n\\]\nAs with numerical semigroup, we can depict the elements of an ideal via its small elements \\(\\{s_1,\\dots,s_n\\}\\) such that \\(I=\\{s_1,\\dots,s_n,\\to\\}\\), with \\(s_n\\) the conductor of the ideal, which is the smallest integer \\(c\\) in \\(I\\) such that \\(c+\\mathbb{N}\\subseteq I\\).\n\nLoadPackage(\"num\");\n\ntrue\n\n\n\ns:=NumericalSemigroup(6,9,11);;\nm:=MaximalIdeal(s);;\nSmallElements(m);\n\n[ 6, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\n\n\n\nk:=CanonicalIdeal(s);;\nSmallElements(k);\n\n[ 0, 6, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\n\n\n\nk=0+s;\n\ntrue\n\n\nIt is easy to see that \\(\\operatorname{K}(S)=S\\) if and only if \\(S\\) is symmetric.\nThe Frobenius number of \\(I\\) is defined as \\(\\max(\\mathbb{Z}\\setminus I)\\).\n\nFrobeniusNumber(k);\n\n25\n\n\n\nFrobeniusNumber(s);\n\n25\n\n\nIf \\(I\\) is an ideal, so is any of its translates by an integer. We say that two ideals \\(I\\) and \\(J\\) are equivalent if there is an integer \\(z\\) such that \\(I=z+J\\).\n\n10+k;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\nWe can translate every ideal so that its minimum is zero in the following way:\n\nm0:=-Minimum(m)+m;\nSmallElements(m0);\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n[ 0, 3, 5, 6, 9, 11, 12, 14, 15, 16, 17, 18, 20 ]\n\n\nOr we can translate an ideal so that it has the same Frobenius number has its ambient semigroup.\n\ntilde:=i-&gt;i+FrobeniusNumber(AmbientNumericalSemigroupOfIdeal(i))-FrobeniusNumber(i);\n\nfunction( i ) ... end\n\n\nAmbientNumericalSemigroupOfIdeal outputs the ambient semigroup of an ideal.\n\nSmallElements(tilde(m));\n\n[ 6, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\n\n\n\ntilde(m)=m;\n\ntrue\n\n\nThe ideal tilde(I) has the property that it contains \\(\\operatorname{C}(S)+\\mathbb{N}\\) and it is contained in the standard canonical ideal of \\(S\\).\n\nIsSubset(k,tilde(m));\n\ntrue\n\n\nNotice that if \\(X\\) is a finite subset of integers, then \\(X+S=\\bigcup_{x\\in X} x+S\\) is an ideal of \\(S\\).\n\ni:=[0,3]+s;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\nSmallElements(i);\n\n[ 0, 3, 6, 9, 11, 12, 14, 15, 17, 18, 20 ]\n\n\nAs a matter of fact, every ideal of \\(S\\) is of this form.\nLet \\(I\\) be an ideal, and let \\(i_0=\\min(I)\\). Then \\(i_0+S\\subseteq I\\). Take \\(i_1=\\min(I\\setminus (i_0+S))\\). Then \\(i_1\\) is not congruent with \\(i_0\\) módulo \\(\\operatorname{m}(S)\\), since \\(i_0+k\\operatorname{m}(S)\\in i_0+S\\) for all \\(k\\in\\mathbb{N}\\). We can define \\(i_{k+1}=\\min(I\\setminus \\bigcup_{j=0}^k (i_j+S))\\), whenever \\(I\\setminus \\bigcup_{j=0}^k (i_j+S)\\) is not empty. As every new \\(i_k\\) is not congruent with the previous ones modulo \\(\\operatorname{m}(S)\\), we have that at some point \\(I\\setminus \\bigcup_{j=0}^l (i_j+S)\\) is empty. In this way,\n\\[\nI=\\{i_0,\\dots,i_l\\}+S.\n\\]\nThe elements \\(\\{i_0,\\dots,i_l\\}\\) are a minimal generating set of \\(I\\).\nAn ideal is principal if it is of the form \\(x+S\\).\n\nMinimalGenerators(m);\n\n[ 6, 9, 11 ]\n\n\n\nMinimalGenerators(k);\n\n[ 0 ]\n\n\nMinimal generators of \\(I\\) can be obtained by computing \\(I\\setminus(M+I)\\), with \\(M=S\\setminus\\{0\\}\\).\n\nDifference(i,m+i);\n\n[ 0, 3 ]",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html#ideals-of-numerical-semigroups",
    "href": "7-numericalsgps-seventh-session.html#ideals-of-numerical-semigroups",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "Let \\(S\\) be a numerical semigroup. A subset \\(I\\) of \\(\\mathbb{Z}\\) is an ideal of \\(S\\) if \\(I+S\\subseteq I\\) and there exists \\(s\\in S\\) such that \\(s+I\\subseteq S\\) (this last condition is equivalent to saying that \\(I\\) has a minimum).\nThere are a couple of “standard” ideals of \\(S\\). The maximal ideal, \\(S^*\\), and the standard canonical ideal\n\\[\n\\operatorname{K}(S)=\\{z \\in \\mathbb{Z} : \\operatorname{F}(S)-z\\not\\in S\\}.\n\\]\nAs with numerical semigroup, we can depict the elements of an ideal via its small elements \\(\\{s_1,\\dots,s_n\\}\\) such that \\(I=\\{s_1,\\dots,s_n,\\to\\}\\), with \\(s_n\\) the conductor of the ideal, which is the smallest integer \\(c\\) in \\(I\\) such that \\(c+\\mathbb{N}\\subseteq I\\).\n\nLoadPackage(\"num\");\n\ntrue\n\n\n\ns:=NumericalSemigroup(6,9,11);;\nm:=MaximalIdeal(s);;\nSmallElements(m);\n\n[ 6, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\n\n\n\nk:=CanonicalIdeal(s);;\nSmallElements(k);\n\n[ 0, 6, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\n\n\n\nk=0+s;\n\ntrue\n\n\nIt is easy to see that \\(\\operatorname{K}(S)=S\\) if and only if \\(S\\) is symmetric.\nThe Frobenius number of \\(I\\) is defined as \\(\\max(\\mathbb{Z}\\setminus I)\\).\n\nFrobeniusNumber(k);\n\n25\n\n\n\nFrobeniusNumber(s);\n\n25\n\n\nIf \\(I\\) is an ideal, so is any of its translates by an integer. We say that two ideals \\(I\\) and \\(J\\) are equivalent if there is an integer \\(z\\) such that \\(I=z+J\\).\n\n10+k;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\nWe can translate every ideal so that its minimum is zero in the following way:\n\nm0:=-Minimum(m)+m;\nSmallElements(m0);\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n[ 0, 3, 5, 6, 9, 11, 12, 14, 15, 16, 17, 18, 20 ]\n\n\nOr we can translate an ideal so that it has the same Frobenius number has its ambient semigroup.\n\ntilde:=i-&gt;i+FrobeniusNumber(AmbientNumericalSemigroupOfIdeal(i))-FrobeniusNumber(i);\n\nfunction( i ) ... end\n\n\nAmbientNumericalSemigroupOfIdeal outputs the ambient semigroup of an ideal.\n\nSmallElements(tilde(m));\n\n[ 6, 9, 11, 12, 15, 17, 18, 20, 21, 22, 23, 24, 26 ]\n\n\n\ntilde(m)=m;\n\ntrue\n\n\nThe ideal tilde(I) has the property that it contains \\(\\operatorname{C}(S)+\\mathbb{N}\\) and it is contained in the standard canonical ideal of \\(S\\).\n\nIsSubset(k,tilde(m));\n\ntrue\n\n\nNotice that if \\(X\\) is a finite subset of integers, then \\(X+S=\\bigcup_{x\\in X} x+S\\) is an ideal of \\(S\\).\n\ni:=[0,3]+s;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\nSmallElements(i);\n\n[ 0, 3, 6, 9, 11, 12, 14, 15, 17, 18, 20 ]\n\n\nAs a matter of fact, every ideal of \\(S\\) is of this form.\nLet \\(I\\) be an ideal, and let \\(i_0=\\min(I)\\). Then \\(i_0+S\\subseteq I\\). Take \\(i_1=\\min(I\\setminus (i_0+S))\\). Then \\(i_1\\) is not congruent with \\(i_0\\) módulo \\(\\operatorname{m}(S)\\), since \\(i_0+k\\operatorname{m}(S)\\in i_0+S\\) for all \\(k\\in\\mathbb{N}\\). We can define \\(i_{k+1}=\\min(I\\setminus \\bigcup_{j=0}^k (i_j+S))\\), whenever \\(I\\setminus \\bigcup_{j=0}^k (i_j+S)\\) is not empty. As every new \\(i_k\\) is not congruent with the previous ones modulo \\(\\operatorname{m}(S)\\), we have that at some point \\(I\\setminus \\bigcup_{j=0}^l (i_j+S)\\) is empty. In this way,\n\\[\nI=\\{i_0,\\dots,i_l\\}+S.\n\\]\nThe elements \\(\\{i_0,\\dots,i_l\\}\\) are a minimal generating set of \\(I\\).\nAn ideal is principal if it is of the form \\(x+S\\).\n\nMinimalGenerators(m);\n\n[ 6, 9, 11 ]\n\n\n\nMinimalGenerators(k);\n\n[ 0 ]\n\n\nMinimal generators of \\(I\\) can be obtained by computing \\(I\\setminus(M+I)\\), with \\(M=S\\setminus\\{0\\}\\).\n\nDifference(i,m+i);\n\n[ 0, 3 ]",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html#basic-operations",
    "href": "7-numericalsgps-seventh-session.html#basic-operations",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Basic operations",
    "text": "Basic operations\nWe have seen that translates of ideals by integers are idals. Intersections and unions of ideals are ideals. Also the sum of two ideals is an ideal.\n\n5+i;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\ni:=[0,3]+s;;\nj:=[2,5]+s;;\n\n\nIntersection(i,j);\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\nUnion(i,j);\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\ni+j;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\nIn particular, \\(nI\\) represents \\(I+\\dots+I\\) (\\(n\\) times).\n\n2*i=i+i;\n\ntrue\n\n\nGiven two ideals \\(I\\) and \\(J\\), the set\n\\[\nI-J=\\{z \\in \\mathbb{Z} : z+J\\subseteq I\\}\n\\]\nis an ideal.\n\ni-j;\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\nSmallElements(i-j);\n\n[ -2, 1, 4, 7, 9, 10, 12, 13, 15, 16, 18 ]\n\n\nThe trace ideal of \\(S\\) is defined as \\(K+(S-K)\\).\n\nTraceIdeal(s);\n\n&lt;Ideal of numerical semigroup&gt;",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html#some-other-notable-elements",
    "href": "7-numericalsgps-seventh-session.html#some-other-notable-elements",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Some other notable elements",
    "text": "Some other notable elements\nWe have defined already what the conductor, Frobenius number and minimal generators. We can, as in the case of numerical semigroups define the concepts of Apéry set, genus and type.\n\nSmallElements(i);\n\n[ 0, 3, 6, 9, 11, 12, 14, 15, 17, 18, 20 ]\n\n\n\nAperyList(i,9);\n\n[ 0, 28, 11, 3, 22, 14, 6, 25, 17 ]\n\n\nApéry lists in numericalsgps for ideals are only defined for elements in the ambient numerical semigroup.\nIf no second argument is given, the Apéry set is computed with respect to \\(\\operatorname{m}(S)\\).\n\nAperyList(i);\n\n[ 0, 25, 14, 3, 22, 11 ]\n\n\nThe idea of Apery list can be captured by using set difference. Though the output is not sorted in the same way as AperyList.\n\nDifference(i,6+i);\n\n[ 0, 3, 11, 14, 22, 25 ]\n\n\n\nDifference(i,3+i);\n\n[ 0, 11, 22 ]\n\n\n\nDifference(i,0+s);\n\n[ 3, 14, 25 ]\n\n\n\nDifference(i,i+14);\n\n[ 0, 3, 6, 9, 11, 12, 15, 18, 21, 22, 24, 27, 30, 33 ]\n\n\n\nLength(Difference(i,i+14));\n\n14\n\n\n\nDifference(i,2+i);\n\n[ 0, 3, 6, 9, 12, 15, 18, 21 ]\n\n\n\nAperyList(s,-1);\n\n[ 0, 6, 9, 12, 15, 18, 24 ]\n\n\nThe genus of an ideal \\(I\\) is defined as \\(|(\\min(I)+\\mathbb{N})\\setminus I|\\).\n\nLength(Difference([Minimum(i)..Conductor(i)],SmallElements(i)));\n\n10\n\n\nThe type of \\(I\\) is defined as \\(|(I-M)\\setminus I|\\) with \\(M=S\\setminus\\{0\\}\\). The set \\((I-M)\\setminus I\\) is the set of pseudo-Frobenius numbers of \\(I\\).\n\nType(i);\n\n2\n\n\n\nPseudoFrobenius(i);\n\n[ 16, 19 ]\n\n\nThe type of the standard canonical ideal is always one.\n\nType(k);\n\n1\n\n\nWhile the type of the maximal ideal is one plus the type of the semigroup.\n\nType(m);\n\n2\n\n\n\nType(s);\n\n1\n\n\n\nPseudoFrobenius(m);\n\n[ 0, 25 ]\n\n\nEvery ideal \\(I\\) can be decomposed as an intersection of irreducible ideals (those that cannot be expressed as intersection of other ideals properly containing them). This decomposition is unique and contains precisely \\(\\operatorname{t}(I)\\) irreducible ideals.\n\nType(i);\n\n2\n\n\n\nIrreducibleZComponents(i);\n\n[ &lt;Ideal of numerical semigroup&gt;, &lt;Ideal of numerical semigroup&gt; ]\n\n\n\ni=Intersection(IrreducibleZComponents(i));\n\ntrue",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html#ideals-as-infinite-lists-of-integers",
    "href": "7-numericalsgps-seventh-session.html#ideals-as-infinite-lists-of-integers",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Ideals as infinite lists of integers",
    "text": "Ideals as infinite lists of integers\nIdeals are lists of integers, and as such we can obtain an element in a specific position, a range of elements, or even intersect them with other lists of integers.\n\nSmallElements(i);\n\n[ 0, 3, 6, 9, 11, 12, 14, 15, 17, 18, 20 ]\n\n\n\ni[1];\n\n0\n\n\n\ni[4];\n\n9\n\n\n\ni{[10..20]};\n\n[ 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 ]\n\n\n\nIntersection(i,[0..20]);\n\n[ 0, 3, 6, 9, 11, 12, 14, 15, 17, 18, 20 ]\n\n\nMembership is performed as in list (thogh the imlementation is slightly different).\n\n3 in i;\n\ntrue\n\n\n\n2 in i;\n\nfalse\n\n\n\ns:=NumericalSemigroup(3,5,7);;\ni:=2+s;;\nDifference(0+s,i); #Difference(s,i) will not work\n\n[ 0, 3, 6 ]",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html#integral-ideals",
    "href": "7-numericalsgps-seventh-session.html#integral-ideals",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Integral ideals",
    "text": "Integral ideals\nAn ideal \\(I\\) of \\(S\\) is said to be integral if \\(I\\subseteq S\\).\n\ns:=NumericalSemigroup(4,6,9);;\ni:=[0,2]+s;;\nIsIntegral(i);\n\nfalse\n\n\n\nIsIntegral(4+s);\n\ntrue\n\n\nThe complement of any proper ideal in the semigroups is “divisor closed”, in the sense that if \\(x\\in S\\setminus I\\), then for every \\(y\\le_S x\\), we have \\(y\\in S\\setminus I\\) (remenber that \\(a\\le_S b\\) if \\(b-a\\in S\\)). The converse is also true: the complement of every divisor closed finite set yields is an integral ideal.\n\ns:=NumericalSemigroup(10,11,15,19);;\ni:=[20,21,25]+s;;\nd:=Difference(0+s,i);\ni=IdealByDivisorClosedSet(d,s);\n\n[ 0, 10, 11, 15, 19, 22, 26, 29, 33, 34, 37, 38, 48 ]\n\n\ntrue\n\n\nAny integral ideal can be decomposed in a unique irredundant intersection of irreducible integral ideals.\n\ndi:=DecomposeIntegralIdealIntoIrreducibles(i);\n\n[ &lt;Ideal of numerical semigroup&gt;, &lt;Ideal of numerical semigroup&gt; ]\n\n\n\nSmallElements(i);\n\n[ 20, 21, 25, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49 ]\n\n\n\nList(di,SmallElements);\n\n[ [ 10, 11, 20, 21, 22, 25, 26, 29, 30, 31, 32, 33, 35 ],   [ 20, 21, 25, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47,       49 ] ]\n\n\n\ni=Intersection(di);\n\ntrue",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "7-numericalsgps-seventh-session.html#reduction-number-and-blow-ups",
    "href": "7-numericalsgps-seventh-session.html#reduction-number-and-blow-ups",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Reduction number and blow-ups",
    "text": "Reduction number and blow-ups\nFor an integral ideal \\(I\\) of a numerical semigroup, the Hilbert function associated to \\(I\\) is the map that associates to every nonnegative integer \\(n\\) the cardinality of \\(nI\\setminus (n+1)I\\).\n\ns:=NumericalSemigroup(4,6,9);;\nm:=MaximalIdeal(s);;\nh:=HilbertFunction(m);\n\nfunction( n ) ... end\n\n\n\nList([1..10],h);\n\n[ 3, 4, 4, 4, 4, 4, 4, 4, 4, 4 ]\n\n\nNot to be confused wit the Hilbert series of \\(S\\): \\(\\sum_{s\\in S}x^s\\).\nThere is an integer \\(n\\) such that \\(\\min(I)+nI=(n+1)I\\), which is called the reduction number of \\(I\\).\n\nReductionNumber(m);\n\n2\n\n\nThe blow-up of an ideal is the ideal \\(\\bigcup_{n\\in\\mathbb{N}} (nI-nI)\\).\n\nbi:=BlowUp([0,2]+s);\n\n&lt;Ideal of numerical semigroup&gt;\n\n\n\nSmallElements(bi);\n\n[ 0, 2, 4, 6, 8 ]\n\n\nThe blow-up of \\(S\\) is the blow-up of its maximal ideal.\n\nbs:=BlowUp(s);\nSmallElements(bs);\n\n&lt;Numerical semigroup with 2 generators&gt;\n\n\n[ 0, 2, 4 ]\n\n\nThe Blow-up of a numerical semigroup \\(S=\\langle n_1,\\dots,n_e\\rangle\\) with multiplicity \\(m=n_1\\) is precisely the Lipman semigroup associated to \\(S\\): \\(\\langle n_2-n_1, n_3-n_1,\\dots,n_e-n_1\\rangle\\).\n\nLipmanSemigroup(s)=BlowUp(s);\n\ntrue\n\n\n\nMinimalGenerators(LipmanSemigroup(s));\n\n[ 2, 5 ]\n\n\nAfter repeating the operation of computing Lipman semigroups one reaches \\(\\mathbb{N}\\); the sequence of multiplicities of the semigroups obtained is called the multiplicity sequence of the semigroup.\n\nMultiplicitySequence(s);\n\n[ 4, 2, 2, 1 ]\n\n\nThe the Ratliff-Rush closure of \\(I\\) is \\(\\bigcup_{n\\in\\mathbb{N}} ((n+1)I-nI)\\).\n\nRatliffRushClosure(m);\n\n&lt;Ideal of numerical semigroup&gt;\n\n\nThe Ratliff-Rush number of \\(I\\) is the least integer \\(n\\) such that the Ratliff-Rush closure of \\(I\\) equals \\((n+1)I-nI\\).\n\nRatliffRushNumber(m);\n\n1\n\n\n\nRatliffRushClosure(m)=2*m-m;\n\ntrue",
    "crumbs": [
      "Ideals of numerical semigroups"
    ]
  },
  {
    "objectID": "4-numercalsgps-third-session.html",
    "href": "4-numercalsgps-third-session.html",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "LoadPackage(\"num\");\n\ntrue",
    "crumbs": [
      "Gluings, Hilbert series, minimal presentations"
    ]
  },
  {
    "objectID": "4-numercalsgps-third-session.html#gluings-of-numerical-semigroups",
    "href": "4-numercalsgps-third-session.html#gluings-of-numerical-semigroups",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Gluings of numerical semigroups",
    "text": "Gluings of numerical semigroups\nLet \\(S_1\\) and \\(S_2\\) be numerical semigroups, and let \\(a_1\\in S_2\\) and \\(a_2\\in S_1\\) (none of them a minimal generator). Then \\(S=a_1 S_1+a_2 S_2\\) is again a numerical semigroup, and if \\(A_1\\) and \\(A_2\\) are the minimal generating systems of \\(S_1\\) and \\(S_2\\), respectively, \\(a_1A_1\\cup a_2A_2\\) is a minimal generating system of \\(S\\).\nIn this case, we say that \\(S\\) is a gluing of \\(S_1\\) and \\(S_2\\).\n\ns:=NumericalSemigroup(4,6,9);;\n\n\nMinimalGenerators(s);\n\n[ 4, 6, 9 ]\n\n\n\nAsGluingOfNumericalSemigroups(s);\n\n[ [ [ 4 ], [ 6, 9 ] ], [ [ 4, 6 ], [ 9 ] ] ]\n\n\n\nJupyterSplashDot(DotTreeOfGluingsOfNumericalSemigroup(s));\n\n\n\n\n\n\n\n\n\nFree numerical semigroups\nA numerical semigroup \\(S\\) minimally generated by \\(\\{n_1,\\dots,n_e\\}\\) is free for this arrangment of its minimal generators if either \\(\\mathbb{N}\\) or \\(S=d\\langle n_1/d,\\dots,n_{e-1}/d\\rangle+ n_e\\mathbb{N}\\) is a gluing with \\(d=\\gcd\\{n_1,\\dots,n_{e-1}\\}\\) and \\(\\langle n_1/d,\\dots,n_{e-1}/d\\rangle\\) is free.\nA numerical semigroup might be free for different arrangments of its minimal generators, but does not have to be free for all the arrangments of its minimal generators.\n\ns:=NumericalSemigroup(4,6,9);;\nIsFree(s);\n\ntrue\n\n\n\nIsUniversallyFree(s);\n\nfalse\n\n\n\ns:=NumericalSemigroup(6,10,15);;\nIsUniversallyFree(s);\n\ntrue\n\n\n\n\nExercise\nProve that this definition agrees with the definition of free numerical semigroup given in Section 2.3 of our book.\n\n\nTelescopic numerical semigroups\nA numerical semigroup \\(S\\) minimally generated by \\(\\{n_1&lt;\\dots&lt;n_e\\}\\) is telescopic if it is free for the arrangment \\((n_1,\\dots,n_e)\\).\n\ns:=NumericalSemigroup(4,6,9);;\nIsTelescopic(s);\n\ntrue\n\n\nSuppose that \\(S\\) is telescopic and define \\(d_i=\\gcd\\{n_1,\\dots,n_{i-1}\\}\\) and \\(e_i=d_i/d_{i+1}\\). Then \\(S\\) is the semigroup associated to a plane curve singularity if and only if \\(e_in_i&lt;n_{i+1}\\) for all \\(i\\).\n\nNumSgpsUseSingular();\nx:=X(Rationals,\"x\");; y:=X(Rationals,\"y\");;\nf:= y^4-2*x^3*y^2-4*x^5*y+x^6-x^7;;\ns:=SemigroupOfValuesOfPlaneCurve(f);\nMinimalGenerators(s);\n\ntrue\n\n\n&lt;Numerical semigroup with 3 generators&gt;\n\n\n[ 4, 6, 13 ]\n\n\n\nIsTelescopic(s);\n\ntrue\n\n\n\nIsNumericalSemigroupAssociatedIrreduciblePlanarCurveSingularity(s);\n\ntrue\n\n\n\nLoadPackage(\"jupyterviz\");\n\ntrue\n\n\n\nis:=[0..60];;\nPlot([is,i-&gt;Length(CompleteIntersectionNumericalSemigroupsWithFrobeniusNumber(2*i+1))],\n[is, i-&gt;Length(FreeNumericalSemigroupsWithFrobeniusNumber(2*i+1))],\n[is, i-&gt;Length(TelescopicNumericalSemigroupsWithFrobeniusNumber(2*i+1))]);\n\n\n\n\n\n\nApéry sets and gluings\nAssume that \\(S=a_1S_1+a_2S_2\\) is a gluing of \\(S_1\\) and \\(S_2\\). Then\n\\[\n\\operatorname{Ap}(S,a_1a_2)=a_1\\operatorname{Ap}(S_1,a_2)+a_2\\operatorname{Ap}(S_2,a_1).\n\\]\nIn particular,\n\\[\n\\operatorname{F}(S)=a_1\\operatorname{F}(S_1)+a_2\\operatorname{F}(S_2)+a_1a_2,\n\\]\nand\n\\[\n\\operatorname{t}(S)=\\operatorname{t}(S_1)\\operatorname{t}(S_2).\n\\]\nIn particular, the gluing of two symmetric numerical semigroups is symmetric, and every complete intersection is a symmetric numerical semigroup.\n\ns:=NumericalSemigroup(16,24,20,25);\n\n&lt;Numerical semigroup with 4 generators&gt;\n\n\n\nIsSymmetric(s);\n\ntrue\n\n\n\nAsGluingOfNumericalSemigroups(s);\n\n[ [ [ 16, 20, 24 ], [ 25 ] ], [ [ 16, 24 ], [ 20, 25 ] ] ]\n\n\n\nExercise\nFind symmetric numerical semigroups that are not a gluing of two symmetric numerical semigroups.\n\n\n\nHilbert series (or generating functions) and gluings\nLet \\(S\\) be a numerical semigroup. The Hilbert series associated to \\(S\\) is the formal series \\[\nH_S(x)= \\sum_{s\\in S} x^s.\n\\] Also, for every \\(n\\in S\\setminus\\{0\\}\\) \\[\nH_S(x)= \\frac{1}{1-x^n} \\sum_{w\\in \\operatorname{Ap}(S,n)} x^w.\n\\]\nThus, if \\(S=a_1S_1+a_2S_2\\) is a gluing, then \\[\nH_S(x) = (1-x^{a_1a_2})H_{S_1}(x^{a_1})H_{S_2}(x^{a_2}).\n\\]\nDefine the polynomial associated to \\(S\\) as \\[\nP_S(x) = (1-x)H_S(x)= 1+(1-x)\\sum_{g\\in \\mathbb{N}\\setminus S} x^g.\n\\]\n\ns:=NumericalSemigroup(4,6,9);;\np:=NumericalSemigroupPolynomial(s,x);\n\nx^12-x^11+x^8-x^7+x^6-x^5+x^4-x+1\n\n\n\nPrint(p);\n\nx^12-x^11+x^8-x^7+x^6-x^5+x^4-x+1\n\n\nA numerical semigroup is cyclotomic if \\(P_S(x)\\) is a product of cyclotomic polynomials.\nFor every numerical semigroup \\(S\\), the polynomial \\(P_S(x)\\) can be expressed in the following form (uniquely) \\[\nP_S(x)= \\prod_{d\\in \\mathbb{N}\\setminus\\{0\\}}(1-x^d)^{e_d}.\n\\] The sequence \\((e_1,e_2,\\dots)\\) is known as the cyclotomic exponent sequence associated to \\(S\\).\n\nCyclotomicExponentSequence(s,40);\n\n[ 1, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 1 ]\n\n\n\nWittCoefficients(p,40);\n\n[ 1, 0, 0, -1, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]\n\n\nThe numerical semigroup \\(S\\) is cyclotomic if and only if its cyclotomic exponent sequence has finite support.\n\ns:=NumericalSemigroup(3,5,7);;\np:=NumericalSemigroupPolynomial(s,x);;\nWittCoefficients(p,150);\n\n[ 1, 0, -1, 0, -1, 0, -1, 0, 0, 1, 0, 1, 0, 1, 0, 0, -1, 0, -1, 0, 0, 1, 0,   1, 0, 1, -1, 0, -2, 0, -2, 1, -1, 3, 0, 3, -1, 3, -3, 1, -5, 1, -5, 3, -3,   7, -2, 8, -4, 7, -9, 4, -14, 6, -14, 12, -10, 22, -9, 25, -16, 23, -30, 17,   -42, 23, -43, 41, -36, 66, -37, 76, -60, 73, -100, 66, -133, 91, -139, 148,   -129, 219, -146, 252, -222, 252, -340, 255, -438, 346, -469, 524, -473,   731, -564, 846, -820, 887, -1183, 973, -1488, 1309, -1635, 1889, -1756,   2530, -2157, 2947, -3026, 3214, -4181, 3701, -5187, 4922, -5839, 6834,   -6563, 8905, -8200, 10467, -11195, 11807, -14992, 14052, -18463, 18510,   -21237, 24982, -24675, 31960, -31101, 37904, -41573, 43905, -54450, 53343,   -66840, 69606, -78312, 91968, -93176, 116272, -117909, 139142, -155059,   164573, -199918, 202659, -245305, 262345 ]\n\n\n\nOpen problem\nWe do not know if every cyclotomic semigroup is a gluing of two cyclotomic semigroups.",
    "crumbs": [
      "Gluings, Hilbert series, minimal presentations"
    ]
  },
  {
    "objectID": "4-numercalsgps-third-session.html#minimal-presentations",
    "href": "4-numercalsgps-third-session.html#minimal-presentations",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Minimal presentations",
    "text": "Minimal presentations\nIn mathematics many algebraic objects are given by means of (free) generators and some relations among them. For numerical semigroups it is sometimes useful to have representation of this form.\nLet \\(S\\) be a numerical semigroup minimally generated by \\(\\{n_1,\\dots,n_e\\}\\). Every element \\(s\\in S\\) admits an expression of the form \\(s=a_1n_1+\\dots+ a_e n_e\\), and for every \\((a_1,\\dots,a_e)\\in \\mathbb{N}^e\\), the integer \\(a_1n_1+\\dots+a_en_e\\in S\\). Thus, the following (monoid) morphism \\[\n\\varphi_S: \\mathbb{N}^e \\to S,\\ \\varphi_S(a_1,\\dots,a_e)=a_1n_1+\\dots+a_en_e\n\\] is surjective. There is an isomorphism theorem for monoids, and consequently we have that \\(\\mathbb{N}^e/\\ker \\varphi_S\\) is isomorphic to \\(S\\) as a monoid, where \\(\\ker \\phi_S=\\{ (a,b)\\in \\mathbb{N}^e : \\varphi_S(a)=\\varphi_S(b)\\}\\). As a congruence, \\(\\ker \\varphi_S\\) admints a system of generators, which is known as a presentation for \\(S\\).\nA minimal presentation for \\(S\\) is just a minimal generating system of \\(\\ker \\varphi_S\\).\n\ns:=NumericalSemigroup(2,3);\n\n&lt;Numerical semigroup with 2 generators&gt;\n\n\n\nMinimalPresentation(s);\n\n[ [ [ 0, 2 ], [ 3, 0 ] ] ]\n\n\nThus \\(\\langle 2,3\\rangle\\) can be viewed as the monoid generated by \\(a\\) and \\(b\\), which fulfil the relation \\(3a=2b\\).\nGiven \\(s\\in S\\), the set \\(\\varphi_S^{-1}(s)\\) corresponds to all the expressions that \\(s\\) migh have in terms of the minimal generators of \\(S\\). We will call this set, the set of factorizations of \\(s\\), and we will denote it by \\(\\mathsf{Z}(s)\\).\n\nFactorizations(6,s);\n\n[ [ 3, 0 ], [ 0, 2 ] ]\n\n\n\nFactorizations(20,s);\n\n[ [ 10, 0 ], [ 7, 2 ], [ 4, 4 ], [ 1, 6 ] ]\n\n\nA set \\(\\rho\\) generates a congruence \\(\\sigma\\) on \\(\\mathbb{N}^e\\) if for any pair \\((a,b)\\in \\sigma\\) there exists a chain \\(a_1,\\dots,a_n\\) such that\n\n\\(a_1=a\\), \\(a_n=b\\),\nfor all \\(i\\), there exists \\(c_i\\in \\mathbb{N}^e\\) and \\((\\alpha_i,\\beta_i)\\) such that \\((a_i,a_{i+1})=(\\alpha_i+c_i,\\beta_i+c_i)\\) and either \\((\\alpha_i,\\beta_i)\\in \\rho\\) or \\((\\beta_i,\\alpha_i)\\in \\rho\\).\n\nYou can see the sequence \\(a_1,\\dots,a_n\\) as a chain of transformations from \\(a\\) to \\(b\\), and at each step we are applying a relation (or trade) chanbe \\(\\alpha_i\\) by \\(\\beta_i\\) (or viceversa).\nFor instance, in the above example \\(((10,0),(1,6))\\in \\ker\\varphi_S\\). We start with \\((10,0)\\) and apply the only minimal relation we have on our numerical semigroup: \\(((10,0),(10-3,2))\\in \\sigma\\). If we do this a couple of times more, we obtain the chaing \\((10,0)\\), \\((7,2)\\), \\((4,4)\\), and \\((1,6)\\).\n\ns:=NumericalSemigroup(3,5,7);;\nMinimalPresentation(s);\n\n[ [ [ 0, 0, 2 ], [ 3, 1, 0 ] ], [ [ 0, 1, 1 ], [ 4, 0, 0 ] ],   [ [ 0, 2, 0 ], [ 1, 0, 1 ] ] ]\n\n\n\nFactorizations(20,s);\n\n[ [ 5, 1, 0 ], [ 0, 4, 0 ], [ 1, 2, 1 ], [ 2, 0, 2 ] ]\n\n\nAssume that we want to check that \\(((5,1,0),(2,0,2))\\) can be obtained from the minimal relations of \\(S\\). Notice that these two factorizations have some common support, in fact \\((5,1,0)=(3,1,0)+(2,0,0)\\) and \\((2,0,2)=(0,0,2)+(2,0,0)\\). Thus, if we find a chain going from \\((3,1,0)\\) to \\((0,0,2)\\), then by adding \\((2,0,0)\\) to all the steps, we obtain a chain connecting our original factorizations. But we already have this chain, since \\(((0,0,2),(3,1,0))\\) is already in our minimal presentation.\nThe idea can be extended to factorizations of larger elements in \\(S\\). Whenever they have a common “factor”, remove it, and try to connect the new factorizations. This motivates the definition of \\(\\mathcal{R}\\)-classes.\nLet \\(X\\) be a subset of \\(\\mathbb{N}^e\\). We say that \\(x,y\\in X\\) are connected if there exists a sequence \\(x_1,\\dots,x_n\\in X\\) (for some \\(n\\in\\mathbb{N}\\)) such that\n\n\\(x_1=x\\), \\(x_n=y\\),\nfor every \\(i\\), \\(x_i\\) and \\(x_{i+1}\\) have common support.\n\nThe connected components of \\(X\\) under this relation are called \\(R\\)-classes of \\(X\\).\n\nLength(RClassesOfSetOfFactorizations(Factorizations(20,s)));\n\n1\n\n\nThe idea is that whenever we are in the same \\(R\\)-class, we can connect any two factorizations with a chain where two consequtive elements have common support. For these two elements, we remove the common part, moving now to the factorizations of an element smaller than the original one. If these two new factorizations are in the same \\(R\\)-class, we repeat the process. This will end when we arrive at factorizations in different \\(R\\)-classes, and then we only have to connect all the chains that we found translated accordingly.\nLet us illustrate this with an example.\n\nFactorizations(21,s);\n\n[ [ 7, 0, 0 ], [ 2, 3, 0 ], [ 3, 1, 1 ], [ 0, 0, 3 ] ]\n\n\n\nRClassesOfSetOfFactorizations(Factorizations(21,s));\n\n[ [ [ 0, 0, 3 ], [ 2, 3, 0 ], [ 3, 1, 1 ], [ 7, 0, 0 ] ] ]\n\n\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(21,s)));\n\n\n\n\n\n\n\n\nWe know that \\(((7,0,0),(0,0,3))\\in \\ker\\varphi_S\\), and we want to see how can we obtain this pair from the minimal relations of \\(S\\). Both \\((7,0,0)\\) and \\((0,0,3)\\) are in the same \\(R\\)-class. We can, instance, connect them with the sequence \\((7,0,0)\\), \\((3,1,1)\\), \\((0,0,3)\\). By transitivity, if we find a chain of trades going from \\((7,0,0)\\) to \\((3,1,1))\\) and another from \\((3,1,1)\\) to \\((0,0,3)\\), by joining them we will find a chain from \\((7,0,0)\\) to \\((0,0,3)\\).\nBy removing the common part of \\((7,0,0)\\) and \\((3,1,1)\\), we obtain \\((4,0,0)\\) and \\((0,1,1)\\), and the pair \\(((4,0,0),(0,1,1))\\) is in our minimal presentation. We do the same with \\((3,1,1)\\) and \\((0,0,3)\\), obtaining \\((3,1,0)\\) and \\((0,0,2)\\), and \\(((0,0,2),(3,1,0))\\) is in our minimal presentation. Let \\(\\sigma=\\ker\\varphi_S\\). Then \\((7,0,0)=((4,0,0)+(3,0,0))\\sigma ((0,1,1)+(3,0,0))=(3,1,1)\\sigma ((3,1,0)+(0,0,1))\\sigma ((0,0,2)+(0,0,1))=(0,0,3)\\).\nIn this construction, elements with more than one \\(R\\)-class are crucial. These elements are called Betti elements (or degrees) of \\(S\\).\n\nbs:=BettiElements(s);\n\n[ 10, 12, 14 ]\n\n\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(12,s)));\n\n\n\n\n\n\n\n\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(10,s)));\n\n\n\n\n\n\n\n\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(14,s)));\n\n\n\n\n\n\n\n\n\nMinimalPresentation(s);\n\n[ [ [ 0, 0, 2 ], [ 3, 1, 0 ] ], [ [ 0, 1, 1 ], [ 4, 0, 0 ] ],   [ [ 0, 2, 0 ], [ 1, 0, 1 ] ] ]\n\n\n\nList(bs,b-&gt; RClassesOfSetOfFactorizations(Factorizations(b,s)));\n\n[ [ [ [ 0, 2, 0 ] ], [ [ 1, 0, 1 ] ] ], [ [ [ 4, 0, 0 ] ], [ [ 0, 1, 1 ] ] ],   [ [ [ 3, 1, 0 ] ], [ [ 0, 0, 2 ] ] ] ]\n\n\nIt is not hard to prove that if \\(s\\in S\\) is a Betti element, then \\(s=n_i+w\\) with \\(i&gt;2\\) and \\(w\\in \\operatorname{Ap}(S,n_1)\\). Thus the number of Betti elements is finite. As a consequence of this, all minimal presentations have the same cardinality, since we only need relations “connecting” different \\(R\\)-classes of the factorizations of the Betti elements of \\(s\\). This also provides a way do determine all minimal relations of a numerical semigroup (up to symmetry).\n\nAllMinimalRelationsOfNumericalSemigroup(s);\n\n[ [ [ 1, 0, 1 ], [ 0, 2, 0 ] ], [ [ 3, 1, 0 ], [ 0, 0, 2 ] ],   [ [ 4, 0, 0 ], [ 0, 1, 1 ] ] ]\n\n\nMinimal presentations of numerical semigroups with embedding dimension two have cardinality one. Thos for embedding dimension three have cardinality two or three. There are numerical semigroups with embedding dimension four with arbitrarily large minimal presentations.",
    "crumbs": [
      "Gluings, Hilbert series, minimal presentations"
    ]
  },
  {
    "objectID": "5-numercalsgps-fourth-session.html",
    "href": "5-numercalsgps-fourth-session.html",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "LoadPackage(\"num\");\n\ntrue",
    "crumbs": [
      "Minimal presentations and binomial ideals, complete intersections"
    ]
  },
  {
    "objectID": "5-numercalsgps-fourth-session.html#minimal-presentations",
    "href": "5-numercalsgps-fourth-session.html#minimal-presentations",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Minimal presentations",
    "text": "Minimal presentations\nLet us recap some concepts from our last lesson.\nLet \\(S\\) be a numerical semigroup minimally generated by \\(\\{n_1,\\dots,n_e\\}\\). Every element \\(s\\in S\\) admits an expression of the form \\(s=a_1n_1+\\dots+ a_e n_e\\), and for every \\((a_1,\\dots,a_e)\\in \\mathbb{N}^e\\), the integer \\(a_1n_1+\\dots+a_en_e\\in S\\). Thus, the following (monoid) morphism \\[\n\\varphi_S: \\mathbb{N}^e \\to S,\\ \\varphi_S(a_1,\\dots,a_e)=a_1n_1+\\dots+a_en_e\n\\] is surjective. There is an isomorphism theorem for monoids, and consequently we have that \\(\\mathbb{N}^e/\\ker \\varphi_S\\) is isomorphic to \\(S\\) as a monoid, where \\(\\ker \\varphi_S=\\{ (a,b)\\in \\mathbb{N}^e : \\varphi_S(a)=\\varphi_S(b)\\}\\). As a congruence, \\(\\ker \\varphi_S\\) admints a system of generators, which is known as a presentation for \\(S\\).\nA minimal presentation for \\(S\\) is just a minimal generating system of \\(\\ker \\varphi_S\\).\nGiven \\(s\\in S\\), the set \\(\\varphi_S^{-1}(s)\\) corresponds to all the expressions that \\(s\\) migh have in terms of the minimal generators of \\(S\\). We will call this set, the set of factorizations of \\(s\\), and we will denote it by \\(\\mathsf{Z}(s)\\).\nA set \\(\\rho\\) generates a congruence \\(\\sigma\\) on \\(\\mathbb{N}^e\\) if for any pair \\((a,b)\\in \\sigma\\) there exists a chain \\(a_1,\\dots,a_n\\) such that\n\n\\(a_1=a\\), \\(a_n=b\\),\nfor all \\(i\\), there exists \\(c_i\\in \\mathbb{N}^e\\) and \\((\\alpha_i,\\beta_i)\\) such that \\((a_i,a_{i+1})=(\\alpha_i+c_i,\\beta_i+c_i)\\) and either \\((\\alpha_i,\\beta_i)\\in \\rho\\) or \\((\\beta_i,\\alpha_i)\\in \\rho\\).\n\nYou can see the sequence \\(a_1,\\dots,a_n\\) as a chain of transformations from \\(a\\) to \\(b\\), and at each step we are applying a relation (or trade) chanbe \\(\\alpha_i\\) by \\(\\beta_i\\) (or viceversa).\nLet \\(X\\) be a subset of \\(\\mathbb{N}^e\\). We say that \\(x,y\\in X\\) are connected if there exists a sequence \\(x_1,\\dots,x_n\\in X\\) (for some \\(n\\in\\mathbb{N}\\)) such that\n\n\\(x_1=x\\), \\(x_n=y\\),\nfor every \\(i\\), \\(x_i\\) and \\(x_{i+1}\\) have common support.\n\nThe connected components of \\(X\\) under this relation are called \\(R\\)-classes of \\(X\\).\nThe idea is that whenever we are in the same \\(R\\)-class, we can connect any two factorizations with a chain where two consequtive elements have common support. For these two elements, we remove the common part, moving now to the factorizations of an element smaller than the original one. If these two new factorizations are in the same \\(R\\)-class, we repeat the process. This will end when we arrive at factorizations in different \\(R\\)-classes, and then we only have to connect all the chains that we found translated accordingly.\nElements with more than one \\(R\\)-class are called Betti elements (or degrees) of \\(S\\).\nIt is not hard to prove that if \\(s\\in S\\) is a Betti element, then \\(s=n_i+w\\) with \\(i&gt;2\\) and \\(w\\in \\operatorname{Ap}(S,n_1)\\). Thus the number of Betti elements is finite. As a consequence of this, all minimal presentations have the same cardinality, since we only need relations “connecting” different \\(R\\)-classes of the factorizations of the Betti elements of \\(s\\). This also provides a way do determine all minimal relations of a numerical semigroup (up to symmetry).\n\nExample\nLet \\(S=\\langle 5,7,11,13\\rangle\\).\n\ns:=NumericalSemigroup(5,7,11,13);;\n\nWe know that the candidate elements in \\(S\\) with more than one \\(R\\)-class are of the form \\(n_i+w\\) with \\(n_i\\) a minimal generator other than \\(7\\) and \\(w\\in \\operatorname{Ap}(S,7)\\setminus\\{0\\}\\).\n\nap:=AperyList(s);\n\n[ 0, 11, 7, 13, 14 ]\n\n\nThus our candidates are\n\ncandidates:=Set(Cartesian(Difference(ap,[0]),[7,11,13]),Sum);\n\n[ 14, 18, 20, 21, 22, 24, 25, 26, 27 ]\n\n\nWe see that \\(14\\) has a single \\(R\\)-class (in fact it has a unique factorization).\n\nFactorizations(14,s);\n\n[ [ 0, 2, 0, 0 ] ]\n\n\n\nfor c in candidates do\n    Print(c,\" -&gt; \", Factorizations(c,s),\"\\n\");\nod;\n\n14 -&gt; [ [ 0, 2, 0, 0 ] ]\n18 -&gt; [ [ 0, 1, 1, 0 ], [ 1, 0, 0, 1 ] ]\n20 -&gt; [ [ 4, 0, 0, 0 ], [ 0, 1, 0, 1 ] ]\n21 -&gt; [ [ 0, 3, 0, 0 ], [ 2, 0, 1, 0 ] ]\n22 -&gt; [ [ 3, 1, 0, 0 ], [ 0, 0, 2, 0 ] ]\n24 -&gt; [ [ 2, 2, 0, 0 ], [ 0, 0, 1, 1 ] ]\n25 -&gt; [ [ 5, 0, 0, 0 ], [ 0, 2, 1, 0 ], [ 1, 1, 0, 1 ] ]\n26 -&gt; [ [ 1, 3, 0, 0 ], [ 3, 0, 1, 0 ], [ 0, 0, 0, 2 ] ]\n27 -&gt; [ [ 4, 1, 0, 0 ], [ 1, 0, 2, 0 ], [ 0, 2, 0, 1 ] ]\n\n\nLet us filter those candidates with more than one \\(R\\)-class\n\nFiltered(candidates,c-&gt;Length(RClassesOfSetOfFactorizations(Factorizations(c,s)))&gt;1);\n\n[ 18, 20, 21, 22, 24, 26 ]\n\n\nNow let us see how are the factorization graphs associated to each of these elements. From each we will obtain at least a minimal relation for \\(S\\).\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(18,s)));\n\n\n\n\n\n\n\n\nThus we can take either \\(((0,1,1,0),(1,0,0,1))\\) in a minimal presentation or \\(((1,0,0,1),(0,1,1,0))\\).\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(20,s)));\n\n\n\n\n\n\n\n\nHence we need \\(((4,0,0,0),(0,1,0,1))\\) (or its symmetry) in a minimal presentation for \\(S\\).\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(21,s)));\n\n\n\n\n\n\n\n\nThis implies that \\(((0,3,0,0),(2,0,1,0))\\) (or its symmetry) is required as a minimal relation for \\(S\\).\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(22,s)));\n\n\n\n\n\n\n\n\nHere we see that either \\(((3,1,0,0),(0,0,2,0))\\) or its symmetry is needed as a relation for \\(S\\).\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(24,s)));\n\n\n\n\n\n\n\n\nA new minimal relation pops up: \\(((2,2,0,0),(0,0,1,1))\\).\n\nJupyterSplashDot(DotEliahouGraph(Factorizations(26,s)));\n\n\n\n\n\n\n\n\nHere (not counting symmetry) we have two choices to add to our set or minimal relations for \\(S\\), since we can choose two ways of “connecting” the two \\(R\\)-classes of the factorizations of 26 in \\(S\\), say \\(((1,3,0,0),(0,0,0,2))\\) or \\(((3,0,1,0),(0,0,0,2))\\).\nObserve that the relations arising from elements in the same \\(R\\)-class are already a consequence of preceding minimal relations. In this example by removing the common part from \\((1,3,0,0)\\) and \\((3,0,1,0)\\), that is, \\((1,0,0,0)\\), we obtain that \\(((0,3,0,0),(2,0,1,0))\\) is in \\(\\ker\\varphi_S\\), but this relation was already added when we had a look at the factorizations of \\(26-5=21\\).\nBy putting all these relations together we obtain a minimal presentation for \\(S\\).\n\nMinimalPresentation(s);\n\n[ [ [ 0, 0, 0, 2 ], [ 1, 3, 0, 0 ] ], [ [ 0, 0, 1, 1 ], [ 2, 2, 0, 0 ] ],   [ [ 0, 0, 2, 0 ], [ 3, 1, 0, 0 ] ], [ [ 0, 1, 0, 1 ], [ 4, 0, 0, 0 ] ],   [ [ 0, 1, 1, 0 ], [ 1, 0, 0, 1 ] ], [ [ 0, 3, 0, 0 ], [ 2, 0, 1, 0 ] ] ]\n\n\nActually, we have obtained all possible minimal presentations for \\(S\\), which essentially (up to symmetry) are two.\n\nAllMinimalRelationsOfNumericalSemigroup(s);\n\n[ [ [ 1, 0, 0, 1 ], [ 0, 1, 1, 0 ] ], [ [ 1, 3, 0, 0 ], [ 0, 0, 0, 2 ] ],   [ [ 2, 0, 1, 0 ], [ 0, 3, 0, 0 ] ], [ [ 2, 2, 0, 0 ], [ 0, 0, 1, 1 ] ],   [ [ 3, 0, 1, 0 ], [ 0, 0, 0, 2 ] ], [ [ 3, 1, 0, 0 ], [ 0, 0, 2, 0 ] ],   [ [ 4, 0, 0, 0 ], [ 0, 1, 0, 1 ] ] ]",
    "crumbs": [
      "Minimal presentations and binomial ideals, complete intersections"
    ]
  },
  {
    "objectID": "5-numercalsgps-fourth-session.html#minimal-presentations-and-binomial-ideals",
    "href": "5-numercalsgps-fourth-session.html#minimal-presentations-and-binomial-ideals",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Minimal presentations and binomial ideals",
    "text": "Minimal presentations and binomial ideals\nLet \\(S\\) be a numerical semigroup minimally generated by \\(\\{n_1,\\dots,n_e\\}\\). Let \\(K\\) be a field and \\(K[x_1,\\dots,x_e]\\) be the polynomial ring on the variables \\(x_1,\\dots, x_e\\) with coefficients in \\(K\\).\nLet \\(t\\) be another unknown. We can define the subring \\(K[S]=K[t^s :s \\in S]=K[t^{n_1},\\dots,t^{n_e}]\\subseteq K[t]\\), which is known as the semigroup ring of \\(S\\). Let \\(\\psi_S:K[x_1,\\dots,x_e]\\to K[t]\\) be the unique ring homomorphism determined by \\(\\psi_S(x_i)=t^{n_i}\\).\nFor \\(a=(a_1,\\dots,a_e)\\in \\mathbb{N}^e\\), write \\(x^a=x_1^{a_1}\\cdots x_e^{a_e}\\). Clearly, \\(\\psi_S(x^a)=t^{\\phi_S(a)}\\), and consequently whenever \\((a,b)\\in \\ker \\psi_S\\), we have that \\(x^a-x^b\\in \\ker \\psi_S\\). It is not hard to prove that \\[\n\\ker \\psi_S = \\langle x^a - x^b : (a,b)\\in \\ker \\varphi_S\\rangle\n\\] and that a set \\(\\rho\\) generates \\(\\ker \\phi_S\\) as a congruence if and only if \\(\\{ x^a-x^b : (a,b)\\in \\rho\\}\\) generates \\(\\ker\\psi_S\\) as an ideal.\n\ns:=NumericalSemigroup(3,5,7);;\n\nIn order to compute \\(\\ker \\psi_S\\) we can use elimination in the following way.\n\nx:=Indeterminate(Rationals,\"x\");;\ny:=Indeterminate(Rationals,\"y\");;\nz:=Indeterminate(Rationals,\"z\");;\nt:=Indeterminate(Rationals,\"t\");;\n\nWe identify each variable to \\(t\\) to the power of the corresponding minimal generator.\n\ngens:=[x-t^3,y-t^5,z-t^7];;\n\nNow, we eliminate the variable \\(t\\).\n\ngr:=GroebnerBasis(gens,EliminationOrdering([t]));\n\n[ -t^3+x, -t^5+y, -t^7+z, x*t^2-y, x^2*t-z, -x^2+y*t, -x^3+z*t^2, x*y-z*t,   -x*z+y^2, -x^4+y*z, -x^3*y+z^2, x^2*y^3-z^3, -x*y^5+z^4, y^7-z^5 ]\n\n\n\ngensi:=Filtered(gr, g-&gt;DegreeIndeterminate(g,t)=0);\n\n[ -x*z+y^2, -x^4+y*z, -x^3*y+z^2, x^2*y^3-z^3, -x*y^5+z^4, y^7-z^5 ]\n\n\nNext, we extract the exponents of the binomials obtained.\n\ned:=3;;\nbintopair:=function(pp)\n    local m1,m2, d1, d2, p;\n    p:=pp/LeadingCoefficientOfPolynomial(pp,MonomialLexOrdering());\n    m1:=LeadingMonomialOfPolynomial(p, MonomialLexOrdering());\n    m2:=m1-p;\n    d1:=List([1..ed], i-&gt;DegreeIndeterminate(m1,i));;\n    d2:=List([1..ed], i-&gt;DegreeIndeterminate(m2,i));;\n    return Set([d1,d2]);\nend;\n\nfunction( pp ) ... end\n\n\n\nrho:=List(gensi,bintopair);\n\n[ [ [ 0, 2, 0 ], [ 1, 0, 1 ] ], [ [ 0, 1, 1 ], [ 4, 0, 0 ] ],   [ [ 0, 0, 2 ], [ 3, 1, 0 ] ], [ [ 0, 0, 3 ], [ 2, 3, 0 ] ],   [ [ 0, 0, 4 ], [ 1, 5, 0 ] ], [ [ 0, 0, 5 ], [ 0, 7, 0 ] ] ]\n\n\nThis is the idea under the implementation of GeneratorsOfKernelCongruence.\n\nGeneratorsOfKernelCongruence([[3],[5],[7]]);\n\n[ [ [ 0, 0, 2 ], [ 3, 1, 0 ] ], [ [ 0, 0, 3 ], [ 2, 3, 0 ] ],   [ [ 0, 0, 4 ], [ 1, 5, 0 ] ], [ [ 0, 0, 5 ], [ 0, 7, 0 ] ],   [ [ 0, 1, 1 ], [ 4, 0, 0 ] ], [ [ 0, 2, 0 ], [ 1, 0, 1 ] ] ]\n\n\nThe resulting set does not have to be minimal in general. We can detect those factorizations that correspond to Betti elements.\n\nbetticand:=Set(rho, p-&gt;p[1]*MinimalGenerators(s));\n\n[ 10, 12, 14, 21, 28, 35 ]\n\n\n\nbetti:=Filtered(betticand, b-&gt;Length(RClassesOfSetOfFactorizations(Factorizations(b,s)))&gt;1);\n\n[ 10, 12, 14 ]\n\n\n\nList(betti, b-&gt;RClassesOfSetOfFactorizations(Factorizations(b,s)));\n\n[ [ [ [ 0, 2, 0 ] ], [ [ 1, 0, 1 ] ] ], [ [ [ 4, 0, 0 ] ], [ [ 0, 1, 1 ] ] ],   [ [ [ 3, 1, 0 ] ], [ [ 0, 0, 2 ] ] ] ]\n\n\n\nGeneratorsOfKernelCongruence([[3],[5],[8]]);\n\n[ [ [ 0, 0, 1 ], [ 1, 1, 0 ] ], [ [ 0, 3, 0 ], [ 5, 0, 0 ] ],   [ [ 0, 4, 0 ], [ 4, 0, 1 ] ], [ [ 0, 5, 0 ], [ 3, 0, 2 ] ],   [ [ 2, 0, 3 ], [ 2, 6, 3 ] ] ]",
    "crumbs": [
      "Minimal presentations and binomial ideals, complete intersections"
    ]
  },
  {
    "objectID": "5-numercalsgps-fourth-session.html#complete-intersections",
    "href": "5-numercalsgps-fourth-session.html#complete-intersections",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Complete intersections",
    "text": "Complete intersections\nLet \\(S\\) be a numerical semigroup minimally generated by \\(\\{n_1,\\dots, n_e\\}\\) with \\(m=\\operatorname{m}(S)\\). The cardinality of a (any) minimal presentation is lowed bounded by \\(e-1\\) and upper bounded by \\(m(m-1)/2\\).\nNumerical semigroups attaining the upper bound are precisely those of maximal embedding dimension.\nA numerical semigroup is a complete intersection if its number of minimal relations is \\(e-1\\).\n\ns:=NumericalSemigroup(4,6,9);;\n\n\nMinimalPresentation(s);\n\n[ [ [ 0, 0, 2 ], [ 0, 3, 0 ] ], [ [ 0, 2, 0 ], [ 3, 0, 0 ] ] ]\n\n\n\nAsGluingOfNumericalSemigroups(s);\n\n[ [ [ 4 ], [ 6, 9 ] ], [ [ 4, 6 ], [ 9 ] ] ]\n\n\n\nIsCompleteIntersection(s);\n\ntrue\n\n\nIt can be shown that \\(S\\) is a complete intersection if it is either \\(\\mathbb{N}\\) or is a gluing of two complete intersection numerical semigroups.\nA numerical semigroup \\(S\\) is a gluing \\(S=a_1S_1+a_2S_2\\) if and only if it admits a minimal presentation of the form \\(\\sigma=\\sigma_1\\cup \\sigma_2\\cup \\{(a,b)\\}\\), where - \\(\\sigma_1\\) only “moves” generators in \\(a_1A_1\\) (it is a presentation of \\(S_1\\)), - \\(\\sigma_2\\) only “moves” generators in \\(a_2A_2\\) (it is a presentation of \\(S_2\\)), - \\(a\\) is a factorization with support in \\(a_1A_1\\), and \\(b\\) is a factorization with support in \\(a_2A_2\\).\n\\[\\operatorname{Betti}(S)=a_1\\operatorname{Betti}(S_1)\\cup a_2\\operatorname{Betti}(S_2) \\cup \\{a_1a_2\\}.\\]\nIn particular, free numerical semigroups have “stair-like” minimal presentations.\n\nA1:=[3,5,7];;\nA2:=[7,11];;\nA:=Concatenation(14*A1,19*A2);\nGcd(14,19);\n\n[ 42, 70, 98, 133, 209 ]\n\n\n1\n\n\n\ns:=NumericalSemigroup(A);\n\n&lt;Numerical semigroup with 5 generators&gt;\n\n\n\nMinimalPresentation(s);\n\n[ [ [ 0, 0, 0, 0, 7 ], [ 0, 0, 0, 11, 0 ] ],   [ [ 0, 0, 0, 2, 0 ], [ 0, 1, 2, 0, 0 ] ],   [ [ 0, 0, 2, 0, 0 ], [ 3, 1, 0, 0, 0 ] ],   [ [ 0, 1, 1, 0, 0 ], [ 4, 0, 0, 0, 0 ] ],   [ [ 0, 2, 0, 0, 0 ], [ 1, 0, 1, 0, 0 ] ] ]\n\n\n\nMinimalPresentation(NumericalSemigroup(A1));\n\n[ [ [ 0, 0, 2 ], [ 3, 1, 0 ] ], [ [ 0, 1, 1 ], [ 4, 0, 0 ] ],   [ [ 0, 2, 0 ], [ 1, 0, 1 ] ] ]\n\n\n\nMinimalPresentation(NumericalSemigroup(A2));\n\n[ [ [ 0, 7 ], [ 11, 0 ] ] ]\n\n\nThe “linking relation” is [ [ 0, 0, 0, 2, 0 ], [ 0, 1, 2, 0, 0 ] ].",
    "crumbs": [
      "Minimal presentations and binomial ideals, complete intersections"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SSC Numerical semigroups course",
    "section": "",
    "text": "Examples for the course on numerical semigroups at the Scuola superiore di Catania\nIn this folder there are some examples of the use of NumericalSgps gap package for the contents of the course.\nWe will follow mainly this book on numerical semigroups and this other with some applications."
  },
  {
    "objectID": "2-numercalsgps-first-session.html",
    "href": "2-numercalsgps-first-session.html",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "Recall that a numerical semigroup \\(S\\) is a subset of the set of nonnegative integers, \\(\\mathbb{N}\\), that is closed under addition, \\(0\\in S\\), and there are only finitely many positive integers not belonging to \\(S\\). The first two contidions imply that \\((S,+)\\) is a submonoid of \\((\\mathbb{N},+)\\).\nThe set \\(\\mathbb{N}\\setminus S\\) is known as the set of gaps of \\(S\\), denoted \\(\\operatorname{G}(S)\\), and the largest integer not belonging to \\(S\\) is its Frobenius number, \\(\\operatorname{F}(S)\\). The conductor of \\(S\\), \\(\\operatorname{C}(S)\\) is the smallest integer having the following property: \\(\\operatorname{C}(S)+\\mathbb{N}\\subseteq S\\).\n\nLoadPackage(\"num\");\n\ntrue\n\n\n\ns:=NumericalSemigroupByGaps([1..5]);\n\nNumerical semigroup\n\n\n\n10 in s;\n\ntrue\n\n\n\nFrobeniusNumber(s);\n\n5\n\n\n\nGaps(s);\n\n[ 1, 2, 3, 4, 5 ]\n\n\nWe can see which elements in the semigroup are in a given interval.\n\nIntersection(s,[0..30]);\n\n[ 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ]\n\n\nOr which is the \\(i^{th}\\) element in the semigroup.\n\ns[1];\n\n0\n\n\n\ns[2];\n\n6\n\n\nOr even, what are the first \\(n\\) elements in the semigroup.\n\ns{[1..20]};\n\n[ 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 ]\n\n\nThe genus of \\(S\\) is the cardinality of \\(\\mathbb{N}\\setminus S\\), denoted \\(\\operatorname{g}(S)\\).\n\nGenus(s);\n\n5\n\n\nThe set \\(S\\cap[0,\\operatorname{C}(S)]\\) is known as the set of small elements of \\(S\\) (if we remove the conductor, then somtimes is called the set of left or sporadic elements).\n\nSmallElements(s);\n\n[ 0, 6 ]\n\n\n\ns=NumericalSemigroupBySmallElements([0,6]);\n\ntrue\n\n\nDenote by \\(\\operatorname{n}(S)=\\#\\{s \\in S : s&lt;\\operatorname{F}(S)\\}\\). It follows that \\(\\operatorname{n}(S)+\\operatorname{g}(S)=\\operatorname{F}(S)+1\\). Since for every \\(n\\in S\\) with \\(n&lt;\\operatorname{F}(S)\\) we have that \\(\\operatorname{F}(S)-n\\not\\in S\\), we have that there are less left elements than gaps, and so the following inequality always holds.\n\nGenus(s)&gt;= (FrobeniusNumber(s)+1)/2;\n\ntrue\n\n\nThe intersection of two numerical semigroups is again a numerical semigroup.\n\nt:=NumericalSemigroupBySmallElements([0,5,10,15]);\n\nNumerical semigroup\n\n\n\ntis:=Intersection(t,s);\n\nNumerical semigroup\n\n\n\nSmallElements(tis);\n\n[ 0, 10, 15 ]\n\n\nAdding a gap to a numerical semigroup does not in general produce a numerical semigroup. There are some gaps that have the property that added to the numerical semigroup yield a new numerical semigroup. If \\(g\\) is one of these gaps and \\(S\\) is our numerical semigroup, then \\(g+S\\) must be a subset of \\(S\\cup\\{g\\}\\), and also \\(kg\\in S\\cup\\{g\\}\\) for every nonnegative integer \\(k\\). This last condition is equivalent to \\(2g\\in S\\). Notice that \\(\\operatorname{F}(S)\\) fulfils these conditions, and so \\(S\\cup\\{\\operatorname{F}(S)\\}\\) is always a numerical semigroup whenever \\(S\\setminus\\mathbb{N}\\).\nThe set of gaps that can be added to a numerical semigroup so that the new set is a numerical semigroup are called special gaps.\n\nSpecialGaps(s);\n\n[ 3, 4, 5 ]\n\n\n\nso:=AddSpecialGapOfNumericalSemigroup(4,s);\nSmallElements(so);\n\nNumerical semigroup\n\n\n[ 0, 4, 6 ]\n\n\nWe can repeat the process until we reach \\(\\mathbb{N}\\), calculating in this way the set of all over-semigroups of our numerical semigroup.\n\nos:=OverSemigroups(s);;\nList(os,SmallElements);\n\n[ [ 0 ], [ 0, 2 ], [ 0, 2, 4 ], [ 0, 2, 4, 6 ], [ 0, 3 ], [ 0, 3, 4, 6 ], [ 0, 3, 5 ], [ 0, 3, 6 ], [ 0, 4 ], [ 0, 4, 6 ], [ 0, 5 ], [ 0, 6 ] ]\n\n\n\ns:=NumericalSemigroup(4,5,7);;\nJupyterSplashDot(DotOverSemigroups(s));",
    "crumbs": [
      "Numerical semigroups: notable elements"
    ]
  },
  {
    "objectID": "2-numercalsgps-first-session.html#gaps-and-small-elements",
    "href": "2-numercalsgps-first-session.html#gaps-and-small-elements",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "",
    "text": "Recall that a numerical semigroup \\(S\\) is a subset of the set of nonnegative integers, \\(\\mathbb{N}\\), that is closed under addition, \\(0\\in S\\), and there are only finitely many positive integers not belonging to \\(S\\). The first two contidions imply that \\((S,+)\\) is a submonoid of \\((\\mathbb{N},+)\\).\nThe set \\(\\mathbb{N}\\setminus S\\) is known as the set of gaps of \\(S\\), denoted \\(\\operatorname{G}(S)\\), and the largest integer not belonging to \\(S\\) is its Frobenius number, \\(\\operatorname{F}(S)\\). The conductor of \\(S\\), \\(\\operatorname{C}(S)\\) is the smallest integer having the following property: \\(\\operatorname{C}(S)+\\mathbb{N}\\subseteq S\\).\n\nLoadPackage(\"num\");\n\ntrue\n\n\n\ns:=NumericalSemigroupByGaps([1..5]);\n\nNumerical semigroup\n\n\n\n10 in s;\n\ntrue\n\n\n\nFrobeniusNumber(s);\n\n5\n\n\n\nGaps(s);\n\n[ 1, 2, 3, 4, 5 ]\n\n\nWe can see which elements in the semigroup are in a given interval.\n\nIntersection(s,[0..30]);\n\n[ 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ]\n\n\nOr which is the \\(i^{th}\\) element in the semigroup.\n\ns[1];\n\n0\n\n\n\ns[2];\n\n6\n\n\nOr even, what are the first \\(n\\) elements in the semigroup.\n\ns{[1..20]};\n\n[ 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 ]\n\n\nThe genus of \\(S\\) is the cardinality of \\(\\mathbb{N}\\setminus S\\), denoted \\(\\operatorname{g}(S)\\).\n\nGenus(s);\n\n5\n\n\nThe set \\(S\\cap[0,\\operatorname{C}(S)]\\) is known as the set of small elements of \\(S\\) (if we remove the conductor, then somtimes is called the set of left or sporadic elements).\n\nSmallElements(s);\n\n[ 0, 6 ]\n\n\n\ns=NumericalSemigroupBySmallElements([0,6]);\n\ntrue\n\n\nDenote by \\(\\operatorname{n}(S)=\\#\\{s \\in S : s&lt;\\operatorname{F}(S)\\}\\). It follows that \\(\\operatorname{n}(S)+\\operatorname{g}(S)=\\operatorname{F}(S)+1\\). Since for every \\(n\\in S\\) with \\(n&lt;\\operatorname{F}(S)\\) we have that \\(\\operatorname{F}(S)-n\\not\\in S\\), we have that there are less left elements than gaps, and so the following inequality always holds.\n\nGenus(s)&gt;= (FrobeniusNumber(s)+1)/2;\n\ntrue\n\n\nThe intersection of two numerical semigroups is again a numerical semigroup.\n\nt:=NumericalSemigroupBySmallElements([0,5,10,15]);\n\nNumerical semigroup\n\n\n\ntis:=Intersection(t,s);\n\nNumerical semigroup\n\n\n\nSmallElements(tis);\n\n[ 0, 10, 15 ]\n\n\nAdding a gap to a numerical semigroup does not in general produce a numerical semigroup. There are some gaps that have the property that added to the numerical semigroup yield a new numerical semigroup. If \\(g\\) is one of these gaps and \\(S\\) is our numerical semigroup, then \\(g+S\\) must be a subset of \\(S\\cup\\{g\\}\\), and also \\(kg\\in S\\cup\\{g\\}\\) for every nonnegative integer \\(k\\). This last condition is equivalent to \\(2g\\in S\\). Notice that \\(\\operatorname{F}(S)\\) fulfils these conditions, and so \\(S\\cup\\{\\operatorname{F}(S)\\}\\) is always a numerical semigroup whenever \\(S\\setminus\\mathbb{N}\\).\nThe set of gaps that can be added to a numerical semigroup so that the new set is a numerical semigroup are called special gaps.\n\nSpecialGaps(s);\n\n[ 3, 4, 5 ]\n\n\n\nso:=AddSpecialGapOfNumericalSemigroup(4,s);\nSmallElements(so);\n\nNumerical semigroup\n\n\n[ 0, 4, 6 ]\n\n\nWe can repeat the process until we reach \\(\\mathbb{N}\\), calculating in this way the set of all over-semigroups of our numerical semigroup.\n\nos:=OverSemigroups(s);;\nList(os,SmallElements);\n\n[ [ 0 ], [ 0, 2 ], [ 0, 2, 4 ], [ 0, 2, 4, 6 ], [ 0, 3 ], [ 0, 3, 4, 6 ], [ 0, 3, 5 ], [ 0, 3, 6 ], [ 0, 4 ], [ 0, 4, 6 ], [ 0, 5 ], [ 0, 6 ] ]\n\n\n\ns:=NumericalSemigroup(4,5,7);;\nJupyterSplashDot(DotOverSemigroups(s));",
    "crumbs": [
      "Numerical semigroups: notable elements"
    ]
  },
  {
    "objectID": "2-numercalsgps-first-session.html#minimal-generators",
    "href": "2-numercalsgps-first-session.html#minimal-generators",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Minimal generators",
    "text": "Minimal generators\nGiven \\(A\\) a set of positive integers, the submonoid (under addition) of \\(\\mathbb{N}\\) generated by \\(A\\) is the intersection of all submonoids of \\(\\mathbb{N}\\) contanining \\(A\\), which can be described as \\[ \\langle A\\rangle = \\left\\{ \\sum_{i=1}^n \\lambda_i a_i : n\\in\\mathbb{N}, \\lambda_i\\in \\mathbb{N}, a_i\\in A\\right\\}.\\] The submonoid \\(\\langle A\\rangle\\) is a numerical semigroup if and only if \\(\\gcd(A)=1\\).\nWe say that \\(A\\) is a generating system of \\(S\\) if \\(S=\\langle A\\rangle\\), and that \\(A\\) is a minimal generating system of \\(S\\) if, in addition, no proper subset of \\(A\\) generates \\(S\\).\nEvery numerical semgiroup has a unique minimal generating system: \\(S^*\\setminus (S^*+S^*)\\), with \\(S^*=S\\setminus\\{0\\}\\). Sometimes the elements in the minimal generating system of \\(S\\) are called minimal generators, atoms, irreducible, or primitive elements of \\(S\\). The cardinality of the minimal generating system of \\(S\\) is known as the embedding dimension of \\(S\\), denoted \\(\\operatorname{e}(S)\\).\n\nGenerators(s);\n\n[ 4, 5, 7 ]\n\n\n\nMinimalGenerators(s);\n\n[ 4, 5, 7 ]\n\n\n\nEmbeddingDimension(s);\n\n3\n\n\n\nMinimalGenerators(tis);\n\n[ 10, 15, 16, 17, 18, 19, 21, 22, 23, 24 ]\n\n\n\nEmbeddingDimension(tis);\n\n10\n\n\nWe can define a numerical semigoup by giving one of its generating sets.\n\ns:=NumericalSemigroup(3,5,7,10,6);\n\nNumerical semigroup with 5 generators\n\n\n\nMinimalGenerators(s);\n\n[ 3, 5, 7 ]\n\n\nThe multiplicity of a numerical semigroup \\(S\\) is the least positive integer in \\(S\\) (and coincides with its smallest minimal generator), we will denote it by \\(\\operatorname{m}(S)\\).\n\nMultiplicity(s);\n\n3\n\n\nNo two minimal generators of \\(S\\) can be congruent modulo de multiplicity, and thus \\(\\operatorname{e}(S)\\le \\operatorname{m}(S)\\).\nThe sum of two numerical semigroups is a numerical semigroup, and the generators of the sum is the union of the generators of the two given numerical semigroups.\n\ntus:=t+s;\n\nNumerical semigroup with 7 generators\n\n\n\ntus=NumericalSemigroup(Union(MinimalGenerators(t),MinimalGenerators(s)));\n\ntrue\n\n\nAn element \\(n\\in S\\) is a minimal generator if and only if \\(S\\setminus\\{n\\}\\) is a minimal generator.\n\nSmallElements(s);\n\n[ 0, 3, 5 ]\n\n\n\nsr:=RemoveMinimalGeneratorFromNumericalSemigroup(3,s);\nMinimalGenerators(sr);\n\nNumerical semigroup with 5 generators\n\n\n[ 5, 6, 7, 8, 9 ]\n\n\nEvery time we remove a minimal generator, we obtain a new semigroup whose genus increases by one. If we start with \\(\\mathbb{N}\\), this procedure gives a way to compute the set of numerical semigroups with a given genus.\n\nl20:=NumericalSemigroupsWithGenus(20);;\nLength(l20);\n\n37396\n\n\nLet us depict the set of numerical semigroups of genus up to four.\n\nc:=Union(List([0..4],i-&gt;NumericalSemigroupsWithGenus(i)));;\ncc:=Filtered(Cartesian(c,c),p-&gt;IsSubset(p[2],p[1]) and IsSubset(MinimalGenerators(p[2]),Difference(p[2],p[1])) \n                                and Length(Difference(p[2],p[1]))=1);;\nd:=Domain(List(c,MinimalGenerators));;\npairs:=List(cc,p-&gt;Tuple([MinimalGenerators(p[1]),MinimalGenerators(p[2])]));;\nbr:=BinaryRelationByElements(d,pairs);\n\n&lt;object&gt;\n\n\n\nJupyterSplashDot(DotBinaryRelation(br));\n\n\n\n\n\n\n\n\nFor any numerical semigroup \\(S\\) (other than \\(\\mathbb{N}\\)), the set \\(T=S\\cup\\{\\operatorname{F}(S)\\}\\) is also a numerical semigroup. The semigroup \\(S\\) is obtained from \\(T\\) by removing a minimal generator larger than its Frobenius number.\nSo if we remove minimal generators larger than the Frobenius number, we still obtain the same numerical semigroups, but the above directed graph becomes a tree.\n\ncc:=Filtered(Cartesian(c,c),p-&gt;IsSubset(p[2],p[1]) and Difference(p[2],p[1])=[FrobeniusNumber(p[1])]);;\npairs:=List(cc,p-&gt;Tuple([MinimalGenerators(p[1]),MinimalGenerators(p[2])]));;\nbr:=BinaryRelationByElements(d,pairs);\n\n&lt;object&gt;\n\n\n\nJupyterSplashDot(DotBinaryRelation(br));\n\n\n\n\n\n\n\n\n\nExercise\nGiven a numerical semigroup \\(S\\) and a finite set of nonnegative integers \\(F\\), write a procedure that checks if \\(S\\cup F\\) is a numerical semigroup (do the same for \\(S\\setminus F\\)).\n\n\nExercise\nWrite a procedure to check Wilf’s conjecture for numerical semigroups generated by at most four generators no larger than 40.",
    "crumbs": [
      "Numerical semigroups: notable elements"
    ]
  },
  {
    "objectID": "2-numercalsgps-first-session.html#apéry-sets",
    "href": "2-numercalsgps-first-session.html#apéry-sets",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Apéry sets",
    "text": "Apéry sets\nOne of the most important tools when studying numerical semigroups is the concept of Apéry sets. Given a numerical semigroup \\(S\\) and \\(n\\) a nonzero element of \\(S\\) (one can define also Apéry sets for elements outside \\(S\\), but we are not going to deal with them here), the Apéry set of \\(n\\) in \\(S\\) (or of \\(S\\) with respect to \\(n\\)) is the set \\[\\operatorname{Ap}(S,n)=\\{ s\\in S : s-n\\not\\in S\\}.\\] This set has precisely \\(n\\) elements, one in each congruence class modulo \\(n\\). Moreover, for every \\(s\\in S\\) there exist unique \\(k\\in \\mathbb{N}\\) and \\(w\\in \\operatorname{Ap}(S,n)\\) such that \\(s=kn+w\\). This in particular implies that the embedding dimension of \\(S\\) is always smaller than or equal to its multiplicity, since \\((\\operatorname{Ap}(S,n))\\setminus\\{0\\}\\cup\\{n\\}\\) is a minimal generating set of \\(S\\) for all \\(n\\in S\\setminus\\{0\\}\\).\n\ns:=NumericalSemigroup(6,10,15);;\nAperyList(s,12);\n\n[ 0, 25, 26, 15, 16, 41, 6, 31, 20, 21, 10, 35 ]\n\n\nIf the second argument is not given, then the Apéry set is taken with respect to the multiplicity of the numerical semigroup.\n\nAperyList(s);\n\n[ 0, 25, 20, 15, 10, 35 ]\n\n\nThe output is arranged in a list, so that in the \\(i^{th}\\) position (starting in 0) we find the least element in \\(S\\) congruent with \\(i\\) modulo \\(n\\). In this way, membership to \\(S\\) becomes trivial once an Apéry set of the semigroup is known.\nThis has some other interesting consequences:\n\nFrobeniusNumber(s)=Maximum(AperyList(s,12))-12;\n\ntrue\n\n\n\nGenus(s)=(Sum(AperyList(s,12)))/12- (12-1)/2;\n\ntrue\n\n\nLet \\(m\\) be the multiplcity of \\(S\\), and let \\(w_i\\) be the element in the Apéry set of \\(m\\) in \\(S\\) congruent with \\(i\\) modulo \\(m\\). We can write \\(w_i=k_im+i\\). The tuple \\((k_1,\\dots,k_{m-1})\\) is known as the Kunz coordinates of \\(S\\).\n\nKunzCoordinates(s);\n\n[ 4, 3, 2, 1, 5 ]\n\n\nNotice that every nonnegative integer \\(x\\) can be written as \\(x=k m+i\\) for some \\(k,n\\in \\mathbb{N}\\), with \\(i&lt;m\\). It follows easily that \\(x\\in S\\) if and only if \\(k\\ge k_i\\). So it is at no surprise that the genus is precisely the sum of the Kunz coordinates of \\(S\\), which is just a reformulation of the above statement on the genus.\n\nGenus(s)=Sum(KunzCoordinates(s));\n\ntrue\n\n\nNotice that \\(w_i+w_j\\in S\\) for all \\(i,j\\), and thus \\(w_i+w_j=k_{ij}m+w_{i+j \\bmod n}\\), this imposes some conditions on the tuples \\((k_1,\\dots,k_{m-1})\\) that can be Kunz coordinates of a numerical semigroup with multiplicity \\(m\\). In fact, there is a one to one correspondence between numerical semigroups with multiplicity \\(m\\) and integers points in what it is called the Kunz polyhedron.\n\nKunzPolytope(6);\n\n[ [ 1, 0, 0, 0, 0, -1 ], [ 0, 1, 0, 0, 0, -1 ], [ 0, 0, 1, 0, 0, -1 ], [ 0, 0, 0, 1, 0, -1 ], [ 0, 0, 0, 0, 1, -1 ], [ 2, -1, 0, 0, 0, 0 ], [ 1, 1, -1, 0, 0, 0 ], [ 1, 0, 1, -1, 0, 0 ], [ 1, 0, 0, 1, -1, 0 ], [ 0, 2, 0, -1, 0, 0 ], [ 0, 1, 1, 0, -1, 0 ], [ -1, 1, 0, 0, 1, 1 ], [ -1, 0, 1, 1, 0, 1 ], [ 0, -1, 1, 0, 1, 1 ], [ 0, -1, 0, 2, 0, 1 ], [ 0, 0, -1, 1, 1, 1 ], [ 0, 0, 0, -1, 2, 1 ] ]\n\n\nThe first elements of this output mean that \\(x_i\\ge 1\\), while for instance \\([ 1, 0, 1, -1, 0, 0 ]\\) translates to \\(x_1+x_3\\ge x_4\\), and $ [ 0, 0, 0, -1, 2, 1 ]$ to \\(2x_5+1\\ge x_4\\).\n\nx:=List([1..5],i-&gt;Indeterminate(Rationals,i));;\nx1:=Concatenation(x,[1]);;\n\n\\(w_i+w_j\\ge w_{i+j \\mod m}\\)\n\nfor eq in KunzPolytope(6) do Print(eq*x1,\" ≥ 0\\n\"); od;\n\nx_1-1 ≥ 0\nx_2-1 ≥ 0\nx_3-1 ≥ 0\nx_4-1 ≥ 0\nx_5-1 ≥ 0\n2*x_1-x_2 ≥ 0\nx_1+x_2-x_3 ≥ 0\nx_1+x_3-x_4 ≥ 0\nx_1+x_4-x_5 ≥ 0\n2*x_2-x_4 ≥ 0\nx_2+x_3-x_5 ≥ 0\n-x_1+x_2+x_5+1 ≥ 0\n-x_1+x_3+x_4+1 ≥ 0\n-x_2+x_3+x_5+1 ≥ 0\n-x_2+2*x_4+1 ≥ 0\n-x_3+x_4+x_5+1 ≥ 0\n-x_4+2*x_5+1 ≥ 0\n\n\nThe genus of a numerical semigroup \\(S\\) with Kunz coordinates \\((x_1,\\dots,x_{m-1})\\) is \\(x_1+\\dots+x_{m-1}\\). Thus if we want to compute all numerical semigrops withe genus 13 and genus six, we just need to determine the set of integer solutions of the above inequalities and the equation \\(x_1+\\dots+x_5=13\\).\nAs we have seen, Apéry sets are a useful tool to check membership to the semigroup. If we remove one of the minimal generators, then the corresponding Kunz coordinate will be incresed by one, and if we add a special gap, then the corresponding Kunz coordinate will decrease by one.\n\nMinimalGenerators(s);\n\n[ 6, 10, 15 ]\n\n\n\nAperyList(s);\n\n[ 0, 25, 20, 15, 10, 35 ]\n\n\n\nAperyList(RemoveMinimalGeneratorFromNumericalSemigroup(10,s));\n\n[ 0, 25, 20, 15, 16, 35 ]\n\n\n\nSpecialGaps(s);\n\n[ 29 ]\n\n\n\nAperyList(AddSpecialGapOfNumericalSemigroup(29,s));\n\n[ 0, 25, 20, 15, 10, 29 ]\n\n\n\nExercise\nProvide several examples to check how Apéry sets behave under intersections and sums of numerical semigroups.",
    "crumbs": [
      "Numerical semigroups: notable elements"
    ]
  },
  {
    "objectID": "3-numericalsgps-second-lesson.html#exercise-1",
    "href": "3-numericalsgps-second-lesson.html#exercise-1",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "Exercise",
    "text": "Exercise\nWrite a procedure that detects for which numerical semigroups, generated by four elements not larger than 50, the above inequality becomes an equality.",
    "crumbs": [
      "Pseudo-Frobenius numbers and families"
    ]
  },
  {
    "objectID": "3-numericalsgps-second-lesson.html#when-some-bounds-are-attained",
    "href": "3-numericalsgps-second-lesson.html#when-some-bounds-are-attained",
    "title": "NumericalSgps an introduction - SSC 2023",
    "section": "When some bounds are attained",
    "text": "When some bounds are attained\n\nNumerical semigroups with maximal embedding dimension\nWe have already seen that the embedding dimension of a numerical semigroup is always less than or equal to the multiplicity. We say that a numerical semigroup \\(S\\) has maximal embedding dimension if \\(\\operatorname{m}(S)=\\operatorname{e}(S)\\).\n\ns:=NumericalSemigroup(3,5,7);;\n\n\nIsMED(s);\n\ntrue\n\n\nA numerical semigroup \\(S\\) is of maximal embedding dimension if and only if \\((S\\setminus\\{0\\})-\\operatorname{m}(S)\\) is a numerical semigroup, or equivalently, for any \\(x,y\\in S\\) with \\(x\\ge y \\ge \\operatorname{m}(S)\\), we have \\(x+y-\\operatorname{m}(S)\\in S\\).\nIt turns out that the intersecction of two maximal embedding dimension numerical semigroups is again of maximal embedding dimension, and thus we can think about a maximal embedding dimension closure.\n\ns:=NumericalSemigroup(3,5);;\n\n\nMinimalGenerators(MEDClosure(s));\n\n[ 3, 5, 7 ]\n\n\nIt also makes sense to talk abot the minimal generators as a numerical semigroup with maximal embedding dimension. An element \\(a\\) in a numerical semigroup \\(S\\) with maximal embedding dimension, with \\(a&gt;\\operatorname{m}(S)\\), will be in that minimal MED generating system if and only if \\(S\\setminus\\{a\\}\\) is again a numerical semigroup with maximal embedding dimension.\n\nMinimalMEDGeneratingSystemOfMEDNumericalSemigroup(NumericalSemigroup(3,5,7));\n\n[ 3, 5 ]\n\n\n\nt:=RemoveMinimalGeneratorFromNumericalSemigroup(5,s);\n\nNumerical semigroup with 3 generators\n\n\n\nMinimalGenerators(t);\n\n[ 3, 8, 10 ]\n\n\n\nIsMED(t);\n\ntrue\n\n\nIf \\(S=\\langle m=n_1&lt; n_2&lt; \\dots &lt; n_m\\rangle\\) is a numerical semigroup with maximal embedding dimension, then \\(\\operatorname{Ap}(S,m)=\\{0, n_2, \\dots, n_m\\}\\), and thus \\(\\operatorname{t}(S)=m-1\\). It is not hard to prove that \\(S\\) has maximal embedding dimension if and only if it has maximal type.\n\nType(NumericalSemigroup(3,5,7));\n\n2\n\n\n\nrap:=HasseDiagramOfAperyListOfNumericalSemigroup(NumericalSemigroup([5..10]));\nJupyterSplashDot(DotBinaryRelation(rap));\n\n\n\n\n\n\n\n\nA particular class of numerical semigroups with maximal embedding dimension is that of Arf numerical semigroups. A numerical semigroup \\(S\\) if Arf if for any \\(x,y,z\\in S\\), with \\(x\\ge y\\ge z\\), one gets \\(x+y-z\\in S\\). Clearly, the intersection of two Arf numerical semigroups is again an Arf numerical semigroup.\n\nMinimalGenerators(ArfNumericalSemigroupClosure(NumericalSemigroup(3,5)));\n\n[ 3, 5, 7 ]\n\n\n\n\nIrreducible numerical semigroups\nWe say that a numerical semigroup \\(S\\) is irreducible if it cannot be expressed as the intersection of two numerical semigroups properly containing it.\nIt can be (easily) shown that if we fix a positive integer \\(f\\), then \\(S\\) is irreducible if and only if it is maximal (with respect to inclusion) in the set of all numerical semigroups with Frobenius number \\(f\\) (or equivalently, in the set of all numerical semigroups not containing \\(f\\)).\nRecall that \\(\\operatorname{g}(S)\\ge (\\operatorname{F}(S)+1)/2\\). Having less genus means being “bigger”, and so if \\(\\operatorname{F}(S)\\) is odd, then \\(S\\) is irreducible if and only if \\(\\operatorname{g}(S)= (\\operatorname{F}(S)+1)/2\\).\nFor \\(\\operatorname{F}(S)\\) even, we obtain that \\(S\\) is irreducible if and only if \\(\\operatorname{g}(S)=(\\operatorname{F}(S)+2)/2\\).\nEvery numerical semigroup can be expressed as a finite intersection of irreducible numerical semigroups. Two minimal (non-redundant) expressions of the semigroup as intersection of irreducible numerical semigroup may have different factors.\n\ns:=NumericalSemigroup(3,7,8);\n\nNumerical semigroup with 3 generators\n\n\n\nSmallElements(s);\n\n[ 0, 3, 6 ]\n\n\n\nGaps(s);\n\n[ 1, 2, 4, 5 ]\n\n\n\nIsIrreducible(s);\n\nfalse\n\n\n\nl:=DecomposeIntoIrreducibles(s);\n\n[ Numerical semigroup with 2 generators, Numerical semigroup with 3 generators ]\n\n\n\nList(l,SmallElements);\n\n[ [ 0, 3, 4, 6 ], [ 0, 3, 5 ] ]\n\n\nNotice also that for every integer \\(x\\), both \\(x\\) and \\(\\operatorname{F}(S)-x\\) cannot be in \\(S\\) (since otherwise their sum, which is \\(\\operatorname{F}(S)\\), would be in \\(S\\)). If we want \\(S\\) to have the least possible number of gaps once the Frobenius number is fixed, then we do not want \\(x\\) and \\(\\operatorname{F}(S)-x\\) to be gaps at the same time (unless they are the same and then \\(x=\\operatorname{F}(S)/2\\)).\nAssume that \\(\\operatorname{F}(S)\\) is odd. Then we say that \\(S\\) is symmetric if for any integer \\(x\\not\\in S\\), we have that \\(\\operatorname{F}(S)-x\\in S\\). A numerical semigroup with odd Frobenius number is irreducible if and only if it is symmetric.\nFor the case \\(\\operatorname{F}(S)\\) even, we have to take into account \\(\\operatorname{F}(S)/2\\). A numerical semigroup \\(S\\) is pseudo-symmetric if \\(\\operatorname{F}(S)\\) is even and for any integer \\(x\\) not in \\(S\\) and different from \\(\\operatorname{F}(S)/2\\), we have that \\(\\operatorname{F}(S)-x\\in S\\). A numerical semigroup with even Frobenius number is irreducible if and only if it is pseudo-symmetric.\n\nPseudoFrobenius(s);\n\n[ 4, 5 ]\n\n\n\nli:=IrreducibleNumericalSemigroupsWithFrobeniusNumber(13);\n\n[ Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup ]\n\n\n\nList(li,PseudoFrobenius);\n\n[ [ 13 ], [ 13 ], [ 13 ], [ 13 ], [ 13 ], [ 13 ], [ 13 ], [ 13 ] ]\n\n\n\nli:=IrreducibleNumericalSemigroupsWithFrobeniusNumber(14);\n\n[ Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup ]\n\n\n\nList(li,PseudoFrobenius);\n\n[ [ 7, 14 ], [ 7, 14 ], [ 7, 14 ], [ 7, 14 ], [ 7, 14 ], [ 7, 14 ] ]\n\n\nSymmetric numerical semigroups correspond with those numerical semigroups of type one, while \\(S\\) is pseudo-symmetric if and only if \\(\\operatorname{PF}(S)=\\{\\operatorname{F}(S)/2, \\operatorname{F}(S)\\}\\). As we have seen above, there are numerical semigroups with type two that are not pseudo-symmetric.\n\nLoadPackage(\"jupyterviz\");\n\ntrue\n\n\n\nli:=List([1..40], i-&gt;[i,Length(IrreducibleNumericalSemigroupsWithFrobeniusNumber(i))]);\n\n[ [ 1, 1 ], [ 2, 1 ], [ 3, 1 ], [ 4, 1 ], [ 5, 2 ], [ 6, 1 ], [ 7, 3 ], [ 8, 2 ], [ 9, 3 ], [ 10, 3 ], [ 11, 6 ], [ 12, 2 ], [ 13, 8 ], [ 14, 6 ], [ 15, 7 ], [ 16, 7 ], [ 17, 15 ], [ 18, 7 ], [ 19, 20 ], [ 20, 11 ], [ 21, 18 ], [ 22, 20 ], [ 23, 36 ], [ 24, 14 ], [ 25, 44 ], [ 26, 35 ], [ 27, 45 ], [ 28, 37 ], [ 29, 83 ], [ 30, 36 ], [ 31, 109 ], [ 32, 70 ], [ 33, 101 ], [ 34, 106 ], [ 35, 174 ], [ 36, 77 ], [ 37, 246 ], [ 38, 182 ], [ 39, 227 ], [ 40, 196 ] ]\n\n\n\nPlot(li,rec(type:=\"bar\"));\n\n\n\n\n\n\nExercise\nFind examples of numerical semigroups with type two that are not pseudo-symmetric.\n\n\nAlmost symmetric numerical semigroups\nRecall that for a numerical semigroup \\(S\\), \\(\\operatorname{g}(S)\\ge (\\operatorname{F}(S)+\\operatorname{t}(S))/2\\). We say that \\(S\\) is almost symmetric if \\(\\operatorname{g}(S)= (\\operatorname{F}(S)+\\operatorname{t}(S))/2\\). Consequently, these are numerical semigroups maximal with respect to inclusion once the type and the Frobenius number are fixed.\nClearly, every irreducible numerical semigroup is almost symmetric.\n\ns:=NumericalSemigroup(3,7,8);;\nIsAlmostSymmetric(s);\n\nfalse\n\n\n\nFrobeniusNumber(s);\n\n5\n\n\n\nla:=AlmostSymmetricNumericalSemigroupsWithFrobeniusNumber(5);\n\n[ Numerical semigroup, Numerical semigroup, Numerical semigroup, Numerical semigroup ]\n\n\n\nList(la,SmallElements);\n\n[ [ 0, 6 ], [ 0, 4, 6 ], [ 0, 2, 4, 6 ], [ 0, 3, 4, 6 ] ]\n\n\n\nSmallElements(s);\n\n[ 0, 3, 6 ]\n\n\n\nli:=List([1..35], i-&gt;[i,Length(AlmostSymmetricNumericalSemigroupsWithFrobeniusNumber(i))]);\n\n[ [ 1, 1 ], [ 2, 1 ], [ 3, 2 ], [ 4, 2 ], [ 5, 4 ], [ 6, 3 ], [ 7, 7 ], [ 8, 6 ], [ 9, 11 ], [ 10, 9 ], [ 11, 20 ], [ 12, 15 ], [ 13, 32 ], [ 14, 24 ], [ 15, 47 ], [ 16, 42 ], [ 17, 83 ], [ 18, 58 ], [ 19, 131 ], [ 20, 103 ], [ 21, 188 ], [ 22, 151 ], [ 23, 323 ], [ 24, 241 ], [ 25, 494 ], [ 26, 364 ], [ 27, 718 ], [ 28, 605 ], [ 29, 1192 ], [ 30, 821 ], [ 31, 1827 ], [ 32, 1441 ], [ 33, 2599 ], [ 34, 2034 ], [ 35, 4243 ] ]\n\n\n\nPlot(li,rec(type:=\"bar\"));\n\n\n\n\n\nli:=List([1..20], i-&gt;[i,Length(AlmostSymmetricNumericalSemigroupsWithFrobeniusNumber(2*i))]);\n\n[ [ 1, 1 ], [ 2, 2 ], [ 3, 3 ], [ 4, 6 ], [ 5, 9 ], [ 6, 15 ], [ 7, 24 ], [ 8, 42 ], [ 9, 58 ], [ 10, 103 ], [ 11, 151 ], [ 12, 241 ], [ 13, 364 ], [ 14, 605 ], [ 15, 821 ], [ 16, 1441 ], [ 17, 2034 ], [ 18, 3172 ], [ 19, 4725 ], [ 20, 7694 ] ]\n\n\n\nPlot(li,rec(type:=\"bar\"));\n\n\n\n\nWill this function increse as the Frobenius number increases?\nThere are many other generalizations of symmetry.",
    "crumbs": [
      "Pseudo-Frobenius numbers and families"
    ]
  }
]